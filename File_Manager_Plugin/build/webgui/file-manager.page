Title="File Manager"
---
<?PHP
/* File Manager Plugin for UNRAID */

// Debug output first
if (isset($_GET['debug'])) {
    echo "<h1>Debug Mode</h1>";
    echo "<p>Plugin loaded successfully!</p>";
    echo "<p>Time: " . date('Y-m-d H:i:s') . "</p>";
    echo "<p>PHP works: ‚úÖ</p>";
    exit;
}

// Simple configuration
$service_port = '8080';
$service_enabled = 'enabled';

// Check if service is running
function isServiceRunning($port) {
    $connection = @fsockopen('127.0.0.1', $port, $errno, $errstr, 2);
    if ($connection) {
        fclose($connection);
        return true;
    }
    return false;
}

$service_running = isServiceRunning($service_port);
$binary_exists = file_exists('/usr/local/bin/filebrowser');

// Build service URL  
$protocol = (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off') ? 'https' : 'http';
$hostname = $_SERVER['HTTP_HOST'] ?? $_SERVER['SERVER_NAME'] ?? 'localhost';
$hostname = preg_replace('/:[0-9]+$/', '', $hostname);
$service_url = "{$protocol}://{$hostname}:{$service_port}";
?>

<link type="text/css" rel="stylesheet" href="/webGui/styles/jquery.ui.css">
<style>
.file-manager-container { max-width: 100%; margin: 20px 0; }
.status-card { background: #f8f9fa; border: 1px solid #dee2e6; border-radius: 8px; padding: 20px; margin: 20px 0; }
.status-card.success { background: #d4edda; border-color: #c3e6cb; color: #155724; }
.status-card.warning { background: #fff3cd; border-color: #ffeaa7; color: #856404; }
.status-card.error { background: #f8d7da; border-color: #f5c6cb; color: #721c24; }
.btn { display: inline-block; padding: 8px 16px; margin: 5px; background: #007bff; color: white; text-decoration: none; border: none; border-radius: 4px; cursor: pointer; font-size: 14px; }
.btn:hover { background: #0056b3; }
.btn.btn-success { background: #28a745; }
.btn.btn-warning { background: #ffc107; color: #212529; }
.btn.btn-secondary { background: #6c757d; }
.info-table { width: 100%; border-collapse: collapse; margin: 20px 0; }
.info-table th, .info-table td { padding: 10px; text-align: left; border-bottom: 1px solid #ddd; }
.info-table th { background: #f8f9fa; font-weight: bold; }
.status-indicator.running { color: #28a745; }
.status-indicator.stopped { color: #dc3545; }
.frame-container { margin: 20px 0; border: 1px solid #ddd; border-radius: 8px; overflow: hidden; height: 600px; }
.frame-container iframe { width: 100%; height: 100%; border: none; }
</style>

<div id="title">
    <span class="left">
        File Manager
        <?if ($service_running):?>
            <span style="color: #28a745;">‚óè Running</span>
        <?else:?>
            <span style="color: #dc3545;">‚óè Stopped</span>
        <?endif;?>
    </span>
</div>

<div class="file-manager-container">
    <?if (!$binary_exists):?>
        <!-- Binary Installation Required -->
        <div class="status-card warning">
            <h3>üîß Setup Required</h3>
            <p>FileBrowser binary is not installed. This is required for the file manager to function.</p>
            <div>
                <button onclick="installBinary()" class="btn btn-warning" id="installBtn">
                    üì• Install FileBrowser Binary
                </button>
            </div>
        </div>
        
    <?elseif (!$service_running):?>
        <!-- Service Setup Required -->
        <div class="status-card warning">
            <h3>‚öôÔ∏è Service Setup</h3>
            <p>FileBrowser is installed but not running. Complete the setup process.</p>
            <div>
                <button onclick="setupAdmin()" class="btn btn-warning" id="setupBtn">
                    üë§ Setup Admin User
                </button>
                <button onclick="startService()" class="btn btn-success" id="startBtn">
                    ‚ñ∂Ô∏è Start Service
                </button>
                <button onclick="location.reload()" class="btn btn-secondary">
                    üîÑ Refresh
                </button>
            </div>
        </div>
        
    <?else:?>
        <!-- Service Running -->
        <div class="status-card success">
            <h3>‚úÖ File Manager Active</h3>
            <p>Your file manager is running and ready to use.</p>
            <div>
                <a href="<?=$service_url?>" target="_blank" class="btn btn-success">
                    üóÇÔ∏è Open File Manager
                </a>
                <button onclick="stopService()" class="btn btn-warning" id="stopBtn">
                    ‚èπÔ∏è Stop Service
                </button>
                <button onclick="location.reload()" class="btn btn-secondary">
                    üîÑ Refresh
                </button>
            </div>
        </div>
        
        <!-- Embedded File Manager -->
        <div class="frame-container">
            <iframe src="<?=$service_url?>" title="File Manager"></iframe>
        </div>
    <?endif;?>

    <!-- Service Information -->
    <div class="status-card">
        <h3>üìä Service Information</h3>
        <table class="info-table">
            <tr>
                <th>Status</th>
                <td>
                    <?if ($service_running):?>
                        <span style="color: #28a745;">‚úÖ Running</span>
                    <?else:?>
                        <span style="color: #dc3545;">‚ùå Stopped</span>
                    <?endif;?>
                </td>
            </tr>
            <tr>
                <th>Binary Status</th>
                <td>
                    <?if ($binary_exists):?>
                        <span style="color: #28a745;">‚úÖ Installed</span>
                    <?else:?>
                        <span style="color: #dc3545;">‚ùå Not Installed</span>
                    <?endif;?>
                </td>
            </tr>
            <tr>
                <th>Port</th>
                <td><?=$service_port?></td>
            </tr>
            <tr>
                <th>Access URL</th>
                <td><a href="<?=$service_url?>" target="_blank"><?=$service_url?></a></td>
            </tr>
            <tr>
                <th>Plugin Version</th>
                <td>2025.10.04.02</td>
            </tr>
        </table>
    </div>
</div>

<script>
function safeFetchJson(url, options) {
    return fetch(url, options).then(async resp => {
        const raw = await resp.text();
        if (!raw.trim()) {
            const headersObj = {}; resp.headers.forEach((v,k)=>{headersObj[k]=v});
            console.warn('safeFetchJson: empty body', {url, status: resp.status, headers: headersObj});
            try {
                const healthResp = await fetch('health.php?_ts=' + Date.now());
                const healthText = await healthResp.text();
                console.info('Health probe response', healthResp.status, healthText);
            } catch (e) { console.error('Health probe failed', e); }
            throw new Error('Empty response from server (HTTP ' + resp.status + '). See console for diagnostics.');
        }
        try {
            return JSON.parse(raw);
        } catch (e) {
            throw new Error('Invalid JSON response (HTTP ' + resp.status + '). Raw (first 400 chars): ' + raw.substring(0,400));
        }
    }).catch(err => {
        console.error('safeFetchJson error for', url, err);
        throw err;
    });
}

function installBinary() {
    const btn = document.getElementById('installBtn');
    btn.innerHTML = '‚è≥ Installing...';
    btn.disabled = true;

    safeFetchJson('/plugins/file-manager/install_binary.php', {method: 'POST'})
        .then(data => {
            alert((data.status === 'success' ? '‚úÖ ' : '‚ùå ') + data.message);
            if (data.status === 'success') {
                setTimeout(() => location.reload(), 1500);
            } else {
                btn.innerHTML = 'üì• Install FileBrowser Binary';
                btn.disabled = false;
            }
        })
        .catch(err => {
            alert('‚ùå Installation failed: ' + err.message);
            btn.innerHTML = 'üì• Install FileBrowser Binary';
            btn.disabled = false;
        });
}

function setupAdmin() {
    var username = prompt('Enter admin username:', 'admin');
    if (!username) return;
    
    var password = prompt('Enter admin password:', 'admin');
    if (!password) return;
    
    var btn = document.getElementById('setupBtn');
    btn.innerHTML = '‚è≥ Setting up...';
    btn.disabled = true;
    
    safeFetchJson('/plugins/file-manager/setup_admin.php', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({username, password})
    })
        .then(data => {
            alert((data.status === 'success' ? '‚úÖ ' : '‚ùå ') + data.message);
            if (data.status === 'success') {
                setTimeout(() => location.reload(), 1500);
            } else {
                btn.innerHTML = 'üë§ Setup Admin User';
                btn.disabled = false;
            }
        })
        .catch(err => {
            alert('‚ùå Setup failed: ' + err.message);
            btn.innerHTML = 'üë§ Setup Admin User';
            btn.disabled = false;
        });
}

function startService() {
    var btn = document.getElementById('startBtn');
    btn.innerHTML = '‚è≥ Starting...';
    btn.disabled = true;
    
    safeFetchJson('/plugins/file-manager/start_service.php', {method: 'POST'})
        .then(data => {
            alert((data.status === 'success' ? '‚úÖ ' : '‚ùå ') + data.message);
            if (data.status === 'success') {
                setTimeout(() => location.reload(), 1500);
            } else {
                btn.innerHTML = '‚ñ∂Ô∏è Start Service';
                btn.disabled = false;
            }
        })
        .catch(err => {
            alert('‚ùå Start failed: ' + err.message);
            btn.innerHTML = '‚ñ∂Ô∏è Start Service';
            btn.disabled = false;
        });
}

function stopService() {
    if (!confirm('Stop the File Manager service?')) return;
    
    var btn = document.getElementById('stopBtn');
    btn.innerHTML = '‚è≥ Stopping...';
    btn.disabled = true;
    
    safeFetchJson('/plugins/file-manager/stop_service.php', {method: 'POST'})
        .then(data => {
            alert((data.status === 'success' ? '‚úÖ ' : '‚ùå ') + data.message);
            setTimeout(() => location.reload(), 1500);
        })
        .catch(err => {
            alert('‚ùå Stop failed: ' + err.message);
            btn.innerHTML = '‚èπÔ∏è Stop Service';
            btn.disabled = false;
        });
}
</script>