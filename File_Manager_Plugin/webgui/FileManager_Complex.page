Title="File Manager"
Icon="file-manager.png"
---
<?PHP
/* File Manager Plugin for UNRAID
 * Provides a web-based file management interface
 */

$docroot = $_SERVER['DOCUMENT_ROOT'] ?: '/usr/local/emhttp';
require_once "$docroot/webGui/include/Helpers.php";

// Plugin configuration
$plugin_cfg = [];
$config_file = '/boot/config/plugins/file-manager/settings.cfg';
if (file_exists($config_file)) {
    $plugin_cfg = parse_ini_file($config_file, true);
}

$service_enabled = $plugin_cfg['service'] ?? 'enabled';
$service_port = $plugin_cfg['port'] ?? '8080';

// Build service URL
$protocol = (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off') ? 'https' : 'http';
$hostname = $_SERVER['HTTP_HOST'] ?? $_SERVER['SERVER_NAME'] ?? 'localhost';
$hostname = preg_replace('/:[0-9]+$/', '', $hostname); // Remove existing port
$service_url = "{$protocol}://{$hostname}:{$service_port}";

// Check service status
function isServiceRunning($port) {
    $connection = @fsockopen('127.0.0.1', $port, $errno, $errstr, 1);
    if ($connection) {
        fclose($connection);
        return true;
    }
    return false;
}

$service_running = isServiceRunning($service_port);
$binary_exists = file_exists('/usr/local/bin/filebrowser');

function getPluginVersion() {
    $plugin_file = '/boot/config/plugins/file-manager.plg';
    if (file_exists($plugin_file)) {
        $content = file_get_contents($plugin_file);
        if (preg_match('/<!ENTITY version\s+"([^"]+)"/', $content, $matches)) {
            return $matches[1];
        }
    }
    return '2025.10.03.10';
}

$plugin_version = getPluginVersion();
?>

<link type="text/css" rel="stylesheet" href="<?autov('/webGui/styles/jquery.ui.css')?>">
<style>
.file-manager-container {
    max-width: 100%;
    margin: 20px 0;
}

.status-card {
    background: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    padding: 20px;
    margin: 20px 0;
}

.status-card.success {
    background: #d4edda;
    border-color: #c3e6cb;
    color: #155724;
}

.status-card.warning {
    background: #fff3cd;
    border-color: #ffeaa7;
    color: #856404;
}

.status-card.error {
    background: #f8d7da;
    border-color: #f5c6cb;
    color: #721c24;
}

.action-buttons {
    margin: 15px 0;
}

.btn {
    display: inline-block;
    padding: 8px 16px;
    margin: 5px;
    background: #007bff;
    color: white;
    text-decoration: none;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
}

.btn:hover {
    background: #0056b3;
}

.btn.btn-success {
    background: #28a745;
}

.btn.btn-success:hover {
    background: #1e7e34;
}

.btn.btn-warning {
    background: #ffc107;
    color: #212529;
}

.btn.btn-warning:hover {
    background: #e0a800;
}

.btn.btn-secondary {
    background: #6c757d;
}

.btn.btn-secondary:hover {
    background: #545b62;
}

.info-table {
    width: 100%;
    border-collapse: collapse;
    margin: 20px 0;
}

.info-table th,
.info-table td {
    padding: 10px;
    text-align: left;
    border-bottom: 1px solid #ddd;
}

.info-table th {
    background: #f8f9fa;
    font-weight: bold;
}

.status-indicator {
    display: inline-flex;
    align-items: center;
    font-weight: bold;
}

.status-indicator.running {
    color: #28a745;
}

.status-indicator.stopped {
    color: #dc3545;
}

.loading {
    opacity: 0.6;
    pointer-events: none;
}

.frame-container {
    margin: 20px 0;
    border: 1px solid #ddd;
    border-radius: 8px;
    overflow: hidden;
    height: 600px;
}

.frame-container iframe {
    width: 100%;
    height: 100%;
    border: none;
}
</style>

<div id="title">
    <span class="left">
        <img src="/plugins/file-manager/file-manager.png" class="icon">
        File Manager
        <?if ($service_running):?>
            <span class="status-indicator running">‚óè Running</span>
        <?else:?>
            <span class="status-indicator stopped">‚óè Stopped</span>
        <?endif;?>
    </span>
</div>

<div class="file-manager-container">
    <?if ($service_enabled === 'enabled'):?>
        
        <?if (!$binary_exists):?>
            <!-- Binary Installation Required -->
            <div class="status-card warning">
                <h3>üîß Setup Required</h3>
                <p>FileBrowser binary is not installed. This is required for the file manager to function.</p>
                <div class="action-buttons">
                    <button onclick="installBinary()" class="btn btn-warning" id="installBtn">
                        üì• Install FileBrowser Binary
                    </button>
                </div>
            </div>
            
        <?elseif (!$service_running):?>
            <!-- Service Setup Required -->
            <div class="status-card warning">
                <h3>‚öôÔ∏è Service Setup</h3>
                <p>FileBrowser is installed but not configured or running. Complete the setup process.</p>
                <div class="action-buttons">
                    <button onclick="setupAdmin()" class="btn btn-warning" id="setupBtn">
                        üë§ Setup Admin User
                    </button>
                    <button onclick="startService()" class="btn btn-success" id="startBtn">
                        ‚ñ∂Ô∏è Start Service
                    </button>
                    <button onclick="refreshStatus()" class="btn btn-secondary">
                        üîÑ Refresh Status
                    </button>
                </div>
            </div>
            
        <?else:?>
            <!-- Service Running -->
            <div class="status-card success">
                <h3>‚úÖ File Manager Active</h3>
                <p>Your file manager is running and ready to use.</p>
                <div class="action-buttons">
                    <a href="<?=$service_url?>" target="_blank" class="btn btn-success">
                        üóÇÔ∏è Open File Manager
                    </a>
                    <button onclick="stopService()" class="btn btn-warning" id="stopBtn">
                        ‚èπÔ∏è Stop Service
                    </button>
                    <button onclick="refreshStatus()" class="btn btn-secondary">
                        üîÑ Refresh Status
                    </button>
                </div>
            </div>
            
            <!-- Embedded File Manager -->
            <div class="frame-container">
                <iframe src="<?=$service_url?>" title="File Manager"></iframe>
            </div>
        <?endif;?>
        
    <?else:?>
        <!-- Service Disabled -->
        <div class="status-card error">
            <h3>‚è∏Ô∏è Service Disabled</h3>
            <p>File Manager service is currently disabled in the configuration.</p>
            <div class="action-buttons">
                <button onclick="enableService()" class="btn btn-success">
                    ‚úÖ Enable Service
                </button>
            </div>
        </div>
    <?endif;?>

    <!-- Service Information -->
    <div class="status-card">
        <h3>üìä Service Information</h3>
        <table class="info-table">
            <tr>
                <th>Status</th>
                <td>
                    <?if ($service_running):?>
                        <span class="status-indicator running">‚óè Running</span>
                    <?else:?>
                        <span class="status-indicator stopped">‚óè Stopped</span>
                    <?endif;?>
                </td>
            </tr>
            <tr>
                <th>Binary Status</th>
                <td>
                    <?if ($binary_exists):?>
                        <span style="color: #28a745;">‚úÖ Installed</span>
                    <?else:?>
                        <span style="color: #dc3545;">‚ùå Not Installed</span>
                    <?endif;?>
                </td>
            </tr>
            <tr>
                <th>Port</th>
                <td><?=$service_port?></td>
            </tr>
            <tr>
                <th>Access URL</th>
                <td><a href="<?=$service_url?>" target="_blank"><?=$service_url?></a></td>
            </tr>
            <tr>
                <th>Plugin Version</th>
                <td><?=$plugin_version?></td>
            </tr>
        </table>
    </div>
</div>

<script>
// Enhanced JavaScript for better user experience
function showLoading(buttonId, text) {
    const btn = document.getElementById(buttonId);
    if (btn) {
        btn.innerHTML = '‚è≥ ' + text + '...';
        btn.disabled = true;
        btn.classList.add('loading');
    }
}

function hideLoading(buttonId, originalText) {
    const btn = document.getElementById(buttonId);
    if (btn) {
        btn.innerHTML = originalText;
        btn.disabled = false;
        btn.classList.remove('loading');
    }
}

function installBinary() {
    showLoading('installBtn', 'Installing');
    
    fetch('/plugins/file-manager/install_binary.php', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }
    })
    .then(response => response.json())
    .then(data => {
        hideLoading('installBtn', 'üì• Install FileBrowser Binary');
        if (data.status === 'success') {
            alert('‚úÖ Success: ' + data.message);
            setTimeout(() => location.reload(), 2000);
        } else {
            alert('‚ùå Error: ' + data.message);
        }
    })
    .catch(error => {
        hideLoading('installBtn', 'üì• Install FileBrowser Binary');
        alert('‚ùå Installation failed: ' + error.message);
    });
}

function setupAdmin() {
    const username = prompt('Enter admin username:', 'admin');
    if (!username) return;
    
    const password = prompt('Enter admin password:', 'admin');
    if (!password) return;
    
    showLoading('setupBtn', 'Setting up');
    
    fetch('/plugins/file-manager/setup_admin.php', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ username, password })
    })
    .then(response => response.json())
    .then(data => {
        hideLoading('setupBtn', 'üë§ Setup Admin User');
        if (data.status === 'success') {
            alert('‚úÖ Success: Admin user created!\n\nUsername: ' + data.username + '\nURL: ' + data.url);
            setTimeout(() => location.reload(), 2000);
        } else {
            alert('‚ùå Error: ' + data.message);
        }
    })
    .catch(error => {
        hideLoading('setupBtn', 'üë§ Setup Admin User');
        alert('‚ùå Setup failed: ' + error.message);
    });
}

function startService() {
    showLoading('startBtn', 'Starting');
    
    fetch('/plugins/file-manager/start_service.php', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }
    })
    .then(response => response.json())
    .then(data => {
        hideLoading('startBtn', '‚ñ∂Ô∏è Start Service');
        if (data.status === 'success') {
            alert('‚úÖ Success: ' + data.message);
            setTimeout(() => location.reload(), 2000);
        } else {
            alert('‚ùå Error: ' + data.message);
        }
    })
    .catch(error => {
        hideLoading('startBtn', '‚ñ∂Ô∏è Start Service');
        alert('‚ùå Start failed: ' + error.message);
    });
}

function stopService() {
    if (!confirm('Are you sure you want to stop the File Manager service?')) return;
    
    showLoading('stopBtn', 'Stopping');
    
    fetch('/plugins/file-manager/stop_service.php', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }
    })
    .then(response => response.json())
    .then(data => {
        hideLoading('stopBtn', '‚èπÔ∏è Stop Service');
        if (data.status === 'success') {
            alert('‚úÖ Success: ' + data.message);
            setTimeout(() => location.reload(), 2000);
        } else {
            alert('‚ùå Error: ' + data.message);
        }
    })
    .catch(error => {
        hideLoading('stopBtn', '‚èπÔ∏è Stop Service');
        alert('‚ùå Stop failed: ' + error.message);
    });
}

function enableService() {
    fetch('/plugins/file-manager/enable_service.php', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }
    })
    .then(response => response.json())
    .then(data => {
        if (data.status === 'success') {
            alert('‚úÖ Service enabled successfully');
            location.reload();
        } else {
            alert('‚ùå Error: ' + data.message);
        }
    })
    .catch(error => {
        alert('‚ùå Enable failed: ' + error.message);
    });
}

function refreshStatus() {
    location.reload();
}

// Auto-refresh status every 30 seconds when service is stopped
<?if (!$service_running && $service_enabled === 'enabled'):?>
setInterval(() => {
    fetch('/plugins/file-manager/status.php')
    .then(response => response.json())
    .then(data => {
        if (data.running && !<?=$service_running ? 'true' : 'false'?>) {
            location.reload();
        }
    })
    .catch(() => {
        // Ignore errors for background status checks
    });
}, 30000);
<?endif;?>
</script>