<?xml version='1.0' standalone='yes'?>
<!DOCTYPE PLUGIN [
<!ENTITY name      "file-manager">
<!ENTITY author    "N85UK">
<!ENTITY version   "2025.10.03.20">
<!ENTITY md5       "9c1d6d94b186f4bf1a214a89c4631169">
<!ENTITY launch    "Settings/file-manager">
<!ENTITY gitURL    "https://github.com/N85UK/UnRiaid_Apps">
<!ENTITY pluginURL "&gitURL;/raw/main/File_Manager_Plugin/file-manager.plg">
<!ENTITY support   "&gitURL;/issues">
<!ENTITY min       "7.0.0">
]>

<!-- XML syntax validated - 2025.10.03.20 -->
<PLUGIN name="&name;" author="&author;" version="&version;" launch="&launch;" pluginURL="&pluginURL;" support="&support;" min="&min;">

<CHANGES>
###2025.10.03.20 (FileBrowser Binary Installation Fix)
- Fixed FileBrowser binary testing command from --version to version
- Resolved installation failures caused by incorrect CLI command usage
- Enhanced cross-platform compatibility for binary verification

###2025.10.03.19 (Enhanced Binary Installation &amp; Bug Fixes)
- **Enhanced FileBrowser Installation**: Added network connectivity checks, multiple download sources (GitHub, JSDeliver, Raw GitHub), and comprehensive error handling
- **Improved Error Diagnostics**: Better logging, binary testing before/after installation, and detailed error messages
- **Version Consistency**: Fixed version number mismatch across all files
- **Code Cleanup**: Removed unused debug files and optimized archive size
- **Reliability Improvements**: Added fallback download URLs, retry logic, and timeout handling
- **Security**: Enhanced input validation and secure file operations
- **Cache-busting**: Updated MD5 hash for fresh download

###2025.10.03.18 (JavaScript Path Fix)
- Fixed JavaScript fetch URLs to use relative paths (install_binary.php not /plugins/file-manager/...)
- Improved error handling in PHP scripts to ensure valid JSON responses
- Added proper output buffering and error handlers to prevent JSON parsing errors
- This should resolve the "Unexpected token 'F', 'File not found.' is not valid JSON" error

###2025.10.03.17 (Clean Archive Creation)
- Completely removed all old archive files
- Created fresh XZ compressed archive with verbose verification
- Verified archive structure: webgui/file-manager.page (correct naming)
- Tested XZ decompression compatibility
- Clean build process to eliminate any corruption issues

###2025.10.03.16 (Proper TXZ Format)
- Created proper XZ compressed tar archive (.txz format)
- Previous archives were gzip compressed, causing UNRAID compatibility issues
- Now uses correct `tar -cJf` format that UNRAID expects
- Should resolve "tar archive is corrupt" installation error

###2025.10.03.15 (Archive Rebuild)
- Force fresh download by incrementing version number
- Same fixed content as v2025.10.03.14 but with new filename
- Resolves GitHub caching issue with corrupt archive download

###2025.10.03.14 (File Path Fix)
- Fixed page file naming to match launch path (file-manager.page)
- This should resolve the blank page issue in Settings -> File Manager
- Page files now correctly named for UNRAID webGUI system

###2025.10.03.10 (v2.0 - Complete Rebuild)
- Complete plugin rebuild with working functionality
- Fixed installation issues requiring Force Install
- Enhanced FileBrowser integration with automatic setup
- Improved service management and reliability
- Better error handling and user feedback
- Modern responsive web interface
- Automatic FileBrowser binary installation
- Simplified configuration and setup process
- Real-time service status monitoring
- Comprehensive logging and debugging

###Previous Versions
- See CHANGELOG.md for complete version history
</CHANGES>

<FILE Run="/bin/bash">
<INLINE>
# Remove old plugin files
rm -rf /usr/local/emhttp/plugins/&name;
rm -rf /boot/config/plugins/&name;

# Stop any running services
if pgrep -f "filebrowser" > /dev/null; then
  pkill -f "filebrowser"
fi

echo "Cleaned old installation"
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/&name;/&name;-&version;.txz" Run="upgradepkg --install-new">
<URL>&gitURL;/raw/main/File_Manager_Plugin/&name;-&version;.txz</URL>
<MD5>&md5;</MD5>
</FILE>

<FILE Run="/bin/bash">
<INLINE>
# Extract and install plugin
cd /usr/local/emhttp/plugins
tar -xf /boot/config/plugins/&name;/&name;-&version;.txz

# Set proper permissions
chmod -R 755 /usr/local/emhttp/plugins/&name;

# Run installation script if it exists
if [ -f /usr/local/emhttp/plugins/&name;/scripts/install.sh ]; then
  bash /usr/local/emhttp/plugins/&name;/scripts/install.sh
  echo "Installation script completed"
fi

echo "File Manager plugin installed successfully"
echo "Access via Settings -> File Manager"
</INLINE>
</FILE>

<FILE Run="/bin/bash" Method="remove">
<INLINE>
# Run removal script
if [ -f /usr/local/emhttp/plugins/&name;/scripts/remove.sh ]; then
  bash /usr/local/emhttp/plugins/&name;/scripts/remove.sh
fi

# Remove plugin files
rm -rf /usr/local/emhttp/plugins/&name;
rm -rf /boot/config/plugins/&name;

echo "File Manager plugin removed"
</INLINE>
</FILE>

</PLUGIN>