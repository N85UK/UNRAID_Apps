import { PinpointSMSVoiceV2ServiceException as __BaseException } from "./PinpointSMSVoiceV2ServiceException";
export const AccessDeniedExceptionReason = {
    ACCOUNT_DISABLED: "ACCOUNT_DISABLED",
    INSUFFICIENT_ACCOUNT_REPUTATION: "INSUFFICIENT_ACCOUNT_REPUTATION",
};
export class AccessDeniedException extends __BaseException {
    name = "AccessDeniedException";
    $fault = "client";
    Message;
    Reason;
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
        this.Reason = opts.Reason;
    }
}
export const AccountAttributeName = {
    ACCOUNT_TIER: "ACCOUNT_TIER",
    DEFAULT_PROTECT_CONFIGURATION_ID: "DEFAULT_PROTECT_CONFIGURATION_ID",
};
export const AccountLimitName = {
    CONFIGURATION_SETS: "CONFIGURATION_SETS",
    OPT_OUT_LISTS: "OPT_OUT_LISTS",
    PHONE_NUMBERS: "PHONE_NUMBERS",
    POOLS: "POOLS",
    REGISTRATIONS: "REGISTRATIONS",
    REGISTRATION_ATTACHMENTS: "REGISTRATION_ATTACHMENTS",
    SENDER_IDS: "SENDER_IDS",
    VERIFIED_DESTINATION_NUMBERS: "VERIFIED_DESTINATION_NUMBERS",
};
export const ConflictExceptionReason = {
    CREATE_REGISTRATION_VERSION_NOT_ALLOWED: "CREATE_REGISTRATION_VERSION_NOT_ALLOWED",
    DELETION_PROTECTION_ENABLED: "DELETION_PROTECTION_ENABLED",
    DESTINATION_COUNTRY_BLOCKED_BY_PROTECT_CONFIGURATION: "DESTINATION_COUNTRY_BLOCKED_BY_PROTECT_CONFIGURATION",
    DESTINATION_PHONE_NUMBER_BLOCKED_BY_PROTECT_NUMBER_OVERRIDE: "DESTINATION_PHONE_NUMBER_BLOCKED_BY_PROTECT_NUMBER_OVERRIDE",
    DESTINATION_PHONE_NUMBER_NOT_VERIFIED: "DESTINATION_PHONE_NUMBER_NOT_VERIFIED",
    DESTINATION_PHONE_NUMBER_OPTED_OUT: "DESTINATION_PHONE_NUMBER_OPTED_OUT",
    DISASSOCIATE_REGISTRATION_NOT_ALLOWED: "DISASSOCIATE_REGISTRATION_NOT_ALLOWED",
    DISCARD_REGISTRATION_VERSION_NOT_ALLOWED: "DISCARD_REGISTRATION_VERSION_NOT_ALLOWED",
    EDIT_REGISTRATION_FIELD_VALUES_NOT_ALLOWED: "EDIT_REGISTRATION_FIELD_VALUES_NOT_ALLOWED",
    EVENT_DESTINATION_MISMATCH: "EVENT_DESTINATION_MISMATCH",
    KEYWORD_MISMATCH: "KEYWORD_MISMATCH",
    LAST_PHONE_NUMBER: "LAST_PHONE_NUMBER",
    MESSAGE_TYPE_MISMATCH: "MESSAGE_TYPE_MISMATCH",
    NO_ORIGINATION_IDENTITIES_FOUND: "NO_ORIGINATION_IDENTITIES_FOUND",
    NUMBER_CAPABILITIES_MISMATCH: "NUMBER_CAPABILITIES_MISMATCH",
    OPT_OUT_LIST_MISMATCH: "OPT_OUT_LIST_MISMATCH",
    PHONE_NUMBER_ASSOCIATED_TO_POOL: "PHONE_NUMBER_ASSOCIATED_TO_POOL",
    PHONE_NUMBER_ASSOCIATED_TO_REGISTRATION: "PHONE_NUMBER_ASSOCIATED_TO_REGISTRATION",
    PHONE_NUMBER_NOT_ASSOCIATED_TO_POOL: "PHONE_NUMBER_NOT_ASSOCIATED_TO_POOL",
    PHONE_NUMBER_NOT_IN_REGISTRATION_REGION: "PHONE_NUMBER_NOT_IN_REGISTRATION_REGION",
    PROTECT_CONFIGURATION_ASSOCIATED_WITH_CONFIGURATION_SET: "PROTECT_CONFIGURATION_ASSOCIATED_WITH_CONFIGURATION_SET",
    PROTECT_CONFIGURATION_IS_ACCOUNT_DEFAULT: "PROTECT_CONFIGURATION_IS_ACCOUNT_DEFAULT",
    PROTECT_CONFIGURATION_NOT_ASSOCIATED_WITH_CONFIGURATION_SET: "PROTECT_CONFIGURATION_NOT_ASSOCIATED_WITH_CONFIGURATION_SET",
    REGISTRATION_ALREADY_SUBMITTED: "REGISTRATION_ALREADY_SUBMITTED",
    REGISTRATION_NOT_COMPLETE: "REGISTRATION_NOT_COMPLETE",
    RESOURCE_ALREADY_EXISTS: "RESOURCE_ALREADY_EXISTS",
    RESOURCE_DELETION_NOT_ALLOWED: "RESOURCE_DELETION_NOT_ALLOWED",
    RESOURCE_MODIFICATION_NOT_ALLOWED: "RESOURCE_MODIFICATION_NOT_ALLOWED",
    RESOURCE_NOT_ACTIVE: "RESOURCE_NOT_ACTIVE",
    RESOURCE_NOT_EMPTY: "RESOURCE_NOT_EMPTY",
    SELF_MANAGED_OPT_OUTS_MISMATCH: "SELF_MANAGED_OPT_OUTS_MISMATCH",
    SENDER_ID_ASSOCIATED_TO_POOL: "SENDER_ID_ASSOCIATED_TO_POOL",
    SUBMIT_REGISTRATION_VERSION_NOT_ALLOWED: "SUBMIT_REGISTRATION_VERSION_NOT_ALLOWED",
    TWO_WAY_CONFIG_MISMATCH: "TWO_WAY_CONFIG_MISMATCH",
    VERIFICATION_ALREADY_COMPLETE: "VERIFICATION_ALREADY_COMPLETE",
    VERIFICATION_CODE_EXPIRED: "VERIFICATION_CODE_EXPIRED",
};
export const ResourceType = {
    ACCOUNT: "account",
    CONFIGURATION_SET: "configuration-set",
    EVENT_DESTINATION: "event-destination",
    KEYWORD: "keyword",
    MESSAGE: "message",
    MESSAGE_TEMPLATE: "message-template",
    OPTED_OUT_NUMBER: "opted-out-number",
    OPT_OUT_LIST: "opt-out-list",
    PHONE_NUMBER: "phone-number",
    POLICY: "policy",
    POOL: "pool",
    PROTECT_CONFIGURATION: "protect-configuration",
    REGISTRATION: "registration",
    REGISTRATION_ATTACHMENT: "registration-attachment",
    SENDER_ID: "sender-id",
    VERIFIED_DESTINATION_NUMBER: "verified-destination-number",
};
export class ConflictException extends __BaseException {
    name = "ConflictException";
    $fault = "client";
    Message;
    Reason;
    ResourceType;
    ResourceId;
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.Message = opts.Message;
        this.Reason = opts.Reason;
        this.ResourceType = opts.ResourceType;
        this.ResourceId = opts.ResourceId;
    }
}
export class InternalServerException extends __BaseException {
    name = "InternalServerException";
    $fault = "server";
    $retryable = {};
    Message;
    RequestId;
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, InternalServerException.prototype);
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
export class ResourceNotFoundException extends __BaseException {
    name = "ResourceNotFoundException";
    $fault = "client";
    Message;
    ResourceType;
    ResourceId;
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Message = opts.Message;
        this.ResourceType = opts.ResourceType;
        this.ResourceId = opts.ResourceId;
    }
}
export const ServiceQuotaExceededExceptionReason = {
    ASSOCIATIONS_PER_REGISTRATION: "ASSOCIATIONS_PER_REGISTRATION",
    CONFIGURATION_SETS_PER_ACCOUNT: "CONFIGURATION_SETS_PER_ACCOUNT",
    DAILY_DESTINATION_CALL_LIMIT: "DAILY_DESTINATION_CALL_LIMIT",
    EVENT_DESTINATIONS_PER_CONFIGURATION_SET: "EVENT_DESTINATIONS_PER_CONFIGURATION_SET",
    KEYWORDS_PER_PHONE_NUMBER: "KEYWORDS_PER_PHONE_NUMBER",
    KEYWORDS_PER_POOL: "KEYWORDS_PER_POOL",
    MONTHLY_SPEND_LIMIT_REACHED_FOR_MEDIA: "MONTHLY_SPEND_LIMIT_REACHED_FOR_MEDIA",
    MONTHLY_SPEND_LIMIT_REACHED_FOR_TEXT: "MONTHLY_SPEND_LIMIT_REACHED_FOR_TEXT",
    MONTHLY_SPEND_LIMIT_REACHED_FOR_VOICE: "MONTHLY_SPEND_LIMIT_REACHED_FOR_VOICE",
    OPT_OUT_LISTS_PER_ACCOUNT: "OPT_OUT_LISTS_PER_ACCOUNT",
    ORIGINATION_IDENTITIES_PER_POOL: "ORIGINATION_IDENTITIES_PER_POOL",
    PHONE_NUMBERS_PER_ACCOUNT: "PHONE_NUMBERS_PER_ACCOUNT",
    PHONE_NUMBERS_PER_REGISTRATION: "PHONE_NUMBERS_PER_REGISTRATION",
    POOLS_PER_ACCOUNT: "POOLS_PER_ACCOUNT",
    PROTECT_CONFIGURATIONS_PER_ACCOUNT: "PROTECT_CONFIGURATIONS_PER_ACCOUNT",
    REGISTRATIONS_PER_ACCOUNT: "REGISTRATIONS_PER_ACCOUNT",
    REGISTRATION_ATTACHMENTS_CREATED_PER_DAY: "REGISTRATION_ATTACHMENTS_CREATED_PER_DAY",
    REGISTRATION_ATTACHMENTS_PER_ACCOUNT: "REGISTRATION_ATTACHMENTS_PER_ACCOUNT",
    REGISTRATION_VERSIONS_CREATED_PER_DAY: "REGISTRATION_VERSIONS_CREATED_PER_DAY",
    SENDER_IDS_PER_ACCOUNT: "SENDER_IDS_PER_ACCOUNT",
    TAGS_PER_RESOURCE: "TAGS_PER_RESOURCE",
    VERIFICATION_ATTEMPTS_PER_DAY: "VERIFICATION_ATTEMPTS_PER_DAY",
    VERIFIED_DESTINATION_NUMBERS_PER_ACCOUNT: "VERIFIED_DESTINATION_NUMBERS_PER_ACCOUNT",
};
export class ServiceQuotaExceededException extends __BaseException {
    name = "ServiceQuotaExceededException";
    $fault = "client";
    Message;
    Reason;
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
        this.Message = opts.Message;
        this.Reason = opts.Reason;
    }
}
export class ThrottlingException extends __BaseException {
    name = "ThrottlingException";
    $fault = "client";
    $retryable = {
        throttling: true,
    };
    Message;
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.Message = opts.Message;
    }
}
export const ValidationExceptionReason = {
    ATTACHMENT_TYPE_NOT_SUPPORTED: "ATTACHMENT_TYPE_NOT_SUPPORTED",
    CANNOT_ADD_OPTED_OUT_NUMBER: "CANNOT_ADD_OPTED_OUT_NUMBER",
    CANNOT_PARSE: "CANNOT_PARSE",
    COUNTRY_CODE_MISMATCH: "COUNTRY_CODE_MISMATCH",
    DESTINATION_COUNTRY_BLOCKED: "DESTINATION_COUNTRY_BLOCKED",
    FIELD_VALIDATION_FAILED: "FIELD_VALIDATION_FAILED",
    INTERNATIONAL_SENDING_NOT_SUPPORTED: "INTERNATIONAL_SENDING_NOT_SUPPORTED",
    INVALID_ARN: "INVALID_ARN",
    INVALID_FILTER_VALUES: "INVALID_FILTER_VALUES",
    INVALID_IDENTITY_FOR_DESTINATION_COUNTRY: "INVALID_IDENTITY_FOR_DESTINATION_COUNTRY",
    INVALID_NEXT_TOKEN: "INVALID_NEXT_TOKEN",
    INVALID_PARAMETER: "INVALID_PARAMETER",
    INVALID_REGISTRATION_ASSOCIATION: "INVALID_REGISTRATION_ASSOCIATION",
    INVALID_REQUEST: "INVALID_REQUEST",
    MAXIMUM_SIZE_EXCEEDED: "MAXIMUM_SIZE_EXCEEDED",
    MEDIA_TYPE_NOT_SUPPORTED: "MEDIA_TYPE_NOT_SUPPORTED",
    MISSING_PARAMETER: "MISSING_PARAMETER",
    OTHER: "OTHER",
    PARAMETERS_CANNOT_BE_USED_TOGETHER: "PARAMETERS_CANNOT_BE_USED_TOGETHER",
    PHONE_NUMBER_CANNOT_BE_OPTED_IN: "PHONE_NUMBER_CANNOT_BE_OPTED_IN",
    PHONE_NUMBER_CANNOT_BE_RELEASED: "PHONE_NUMBER_CANNOT_BE_RELEASED",
    PRICE_OVER_THRESHOLD: "PRICE_OVER_THRESHOLD",
    REGISTRATION_FIELD_CANNOT_BE_DELETED: "REGISTRATION_FIELD_CANNOT_BE_DELETED",
    REQUESTED_SPEND_LIMIT_HIGHER_THAN_SERVICE_LIMIT: "REQUESTED_SPEND_LIMIT_HIGHER_THAN_SERVICE_LIMIT",
    RESOURCE_NOT_ACCESSIBLE: "RESOURCE_NOT_ACCESSIBLE",
    SENDER_ID_NOT_REGISTERED: "SENDER_ID_NOT_REGISTERED",
    SENDER_ID_NOT_SUPPORTED: "SENDER_ID_NOT_SUPPORTED",
    SENDER_ID_REQUIRES_REGISTRATION: "SENDER_ID_REQUIRES_REGISTRATION",
    TWO_WAY_CHANNEL_NOT_PRESENT: "TWO_WAY_CHANNEL_NOT_PRESENT",
    TWO_WAY_NOT_ENABLED: "TWO_WAY_NOT_ENABLED",
    TWO_WAY_NOT_SUPPORTED_IN_COUNTRY: "TWO_WAY_NOT_SUPPORTED_IN_COUNTRY",
    TWO_WAY_NOT_SUPPORTED_IN_REGION: "TWO_WAY_NOT_SUPPORTED_IN_REGION",
    TWO_WAY_TOPIC_NOT_PRESENT: "TWO_WAY_TOPIC_NOT_PRESENT",
    UNKNOWN_OPERATION: "UNKNOWN_OPERATION",
    UNKNOWN_REGISTRATION_FIELD: "UNKNOWN_REGISTRATION_FIELD",
    UNKNOWN_REGISTRATION_SECTION: "UNKNOWN_REGISTRATION_SECTION",
    UNKNOWN_REGISTRATION_TYPE: "UNKNOWN_REGISTRATION_TYPE",
    UNKNOWN_REGISTRATION_VERSION: "UNKNOWN_REGISTRATION_VERSION",
    UNSPECIFIED_PARAMETER_NOT_SUPPORTED: "UNSPECIFIED_PARAMETER_NOT_SUPPORTED",
    VERIFICATION_CODE_MISMATCH: "VERIFICATION_CODE_MISMATCH",
    VOICE_CAPABILITY_NOT_AVAILABLE: "VOICE_CAPABILITY_NOT_AVAILABLE",
};
export class ValidationException extends __BaseException {
    name = "ValidationException";
    $fault = "client";
    Message;
    Reason;
    Fields;
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.Message = opts.Message;
        this.Reason = opts.Reason;
        this.Fields = opts.Fields;
    }
}
export const AttachmentStatus = {
    DELETED: "DELETED",
    UPLOAD_COMPLETE: "UPLOAD_COMPLETE",
    UPLOAD_FAILED: "UPLOAD_FAILED",
    UPLOAD_IN_PROGRESS: "UPLOAD_IN_PROGRESS",
};
export const AttachmentUploadErrorReason = {
    INTERNAL_ERROR: "INTERNAL_ERROR",
};
export const ConfigurationSetFilterName = {
    DEFAULT_MESSAGE_FEEDBACK_ENABLED: "default-message-feedback-enabled",
    DEFAULT_MESSAGE_TYPE: "default-message-type",
    DEFAULT_SENDER_ID: "default-sender-id",
    EVENT_DESTINATION_NAME: "event-destination-name",
    MATCHING_EVENT_TYPES: "matching-event-types",
    PROTECT_CONFIGURATION_ID: "protect-configuration-id",
};
export const MessageType = {
    PROMOTIONAL: "PROMOTIONAL",
    TRANSACTIONAL: "TRANSACTIONAL",
};
export const EventType = {
    ALL: "ALL",
    MEDIA_ALL: "MEDIA_ALL",
    MEDIA_BLOCKED: "MEDIA_BLOCKED",
    MEDIA_CARRIER_BLOCKED: "MEDIA_CARRIER_BLOCKED",
    MEDIA_CARRIER_UNREACHABLE: "MEDIA_CARRIER_UNREACHABLE",
    MEDIA_DELIVERED: "MEDIA_DELIVERED",
    MEDIA_FILE_INACCESSIBLE: "MEDIA_FILE_INACCESSIBLE",
    MEDIA_FILE_SIZE_EXCEEDED: "MEDIA_FILE_SIZE_EXCEEDED",
    MEDIA_FILE_TYPE_UNSUPPORTED: "MEDIA_FILE_TYPE_UNSUPPORTED",
    MEDIA_INVALID: "MEDIA_INVALID",
    MEDIA_INVALID_MESSAGE: "MEDIA_INVALID_MESSAGE",
    MEDIA_PENDING: "MEDIA_PENDING",
    MEDIA_QUEUED: "MEDIA_QUEUED",
    MEDIA_SPAM: "MEDIA_SPAM",
    MEDIA_SUCCESSFUL: "MEDIA_SUCCESSFUL",
    MEDIA_TTL_EXPIRED: "MEDIA_TTL_EXPIRED",
    MEDIA_UNKNOWN: "MEDIA_UNKNOWN",
    MEDIA_UNREACHABLE: "MEDIA_UNREACHABLE",
    TEXT_ALL: "TEXT_ALL",
    TEXT_BLOCKED: "TEXT_BLOCKED",
    TEXT_CARRIER_BLOCKED: "TEXT_CARRIER_BLOCKED",
    TEXT_CARRIER_UNREACHABLE: "TEXT_CARRIER_UNREACHABLE",
    TEXT_DELIVERED: "TEXT_DELIVERED",
    TEXT_INVALID: "TEXT_INVALID",
    TEXT_INVALID_MESSAGE: "TEXT_INVALID_MESSAGE",
    TEXT_PENDING: "TEXT_PENDING",
    TEXT_PROTECT_BLOCKED: "TEXT_PROTECT_BLOCKED",
    TEXT_QUEUED: "TEXT_QUEUED",
    TEXT_SENT: "TEXT_SENT",
    TEXT_SPAM: "TEXT_SPAM",
    TEXT_SUCCESSFUL: "TEXT_SUCCESSFUL",
    TEXT_TTL_EXPIRED: "TEXT_TTL_EXPIRED",
    TEXT_UNKNOWN: "TEXT_UNKNOWN",
    TEXT_UNREACHABLE: "TEXT_UNREACHABLE",
    VOICE_ALL: "VOICE_ALL",
    VOICE_ANSWERED: "VOICE_ANSWERED",
    VOICE_BUSY: "VOICE_BUSY",
    VOICE_COMPLETED: "VOICE_COMPLETED",
    VOICE_FAILED: "VOICE_FAILED",
    VOICE_INITIATED: "VOICE_INITIATED",
    VOICE_NO_ANSWER: "VOICE_NO_ANSWER",
    VOICE_RINGING: "VOICE_RINGING",
    VOICE_TTL_EXPIRED: "VOICE_TTL_EXPIRED",
};
export const PoolStatus = {
    ACTIVE: "ACTIVE",
    CREATING: "CREATING",
    DELETING: "DELETING",
};
export const RegistrationStatus = {
    CLOSED: "CLOSED",
    COMPLETE: "COMPLETE",
    CREATED: "CREATED",
    DELETED: "DELETED",
    PROVISIONING: "PROVISIONING",
    REQUIRES_AUTHENTICATION: "REQUIRES_AUTHENTICATION",
    REQUIRES_UPDATES: "REQUIRES_UPDATES",
    REVIEWING: "REVIEWING",
    SUBMITTED: "SUBMITTED",
};
export const RegistrationVersionStatus = {
    APPROVED: "APPROVED",
    ARCHIVED: "ARCHIVED",
    DENIED: "DENIED",
    DISCARDED: "DISCARDED",
    DRAFT: "DRAFT",
    REQUIRES_AUTHENTICATION: "REQUIRES_AUTHENTICATION",
    REVIEWING: "REVIEWING",
    REVOKED: "REVOKED",
    SUBMITTED: "SUBMITTED",
};
export const VerificationStatus = {
    PENDING: "PENDING",
    VERIFIED: "VERIFIED",
};
export const KeywordAction = {
    AUTOMATIC_RESPONSE: "AUTOMATIC_RESPONSE",
    OPT_IN: "OPT_IN",
    OPT_OUT: "OPT_OUT",
};
export const ProtectConfigurationRuleOverrideAction = {
    ALLOW: "ALLOW",
    BLOCK: "BLOCK",
};
export const KeywordFilterName = {
    KEYWORD_ACTION: "keyword-action",
};
export const OptedOutFilterName = {
    END_USER_OPTED_OUT: "end-user-opted-out",
};
export const Owner = {
    SELF: "SELF",
    SHARED: "SHARED",
};
export const PhoneNumberFilterName = {
    DELETION_PROTECTION_ENABLED: "deletion-protection-enabled",
    ISO_COUNTRY_CODE: "iso-country-code",
    MESSAGE_TYPE: "message-type",
    NUMBER_CAPABILITY: "number-capability",
    NUMBER_TYPE: "number-type",
    OPT_OUT_LIST_NAME: "opt-out-list-name",
    SELF_MANAGED_OPT_OUTS_ENABLED: "self-managed-opt-outs-enabled",
    STATUS: "status",
    TWO_WAY_CHANNEL_ARN: "two-way-channel-arn",
    TWO_WAY_ENABLED: "two-way-enabled",
};
export const NumberCapability = {
    MMS: "MMS",
    SMS: "SMS",
    VOICE: "VOICE",
};
export const NumberType = {
    LONG_CODE: "LONG_CODE",
    SHORT_CODE: "SHORT_CODE",
    SIMULATOR: "SIMULATOR",
    TEN_DLC: "TEN_DLC",
    TOLL_FREE: "TOLL_FREE",
};
export const NumberStatus = {
    ACTIVE: "ACTIVE",
    ASSOCIATING: "ASSOCIATING",
    DELETED: "DELETED",
    DISASSOCIATING: "DISASSOCIATING",
    PENDING: "PENDING",
};
export const PoolFilterName = {
    DELETION_PROTECTION_ENABLED: "deletion-protection-enabled",
    MESSAGE_TYPE: "message-type",
    OPT_OUT_LIST_NAME: "opt-out-list-name",
    SELF_MANAGED_OPT_OUTS_ENABLED: "self-managed-opt-outs-enabled",
    SHARED_ROUTES_ENABLED: "shared-routes-enabled",
    STATUS: "status",
    TWO_WAY_CHANNEL_ARN: "two-way-channel-arn",
    TWO_WAY_ENABLED: "two-way-enabled",
};
export const ProtectConfigurationFilterName = {
    ACCOUNT_DEFAULT: "account-default",
    DELETION_PROTECTION_ENABLED: "deletion-protection-enabled",
};
export const RegistrationAttachmentFilterName = {
    ATTACHMENT_STATUS: "attachment-status",
};
export const FieldRequirement = {
    CONDITIONAL: "CONDITIONAL",
    OPTIONAL: "OPTIONAL",
    REQUIRED: "REQUIRED",
};
export const FieldType = {
    ATTACHMENT: "ATTACHMENT",
    SELECT: "SELECT",
    TEXT: "TEXT",
};
export const RegistrationFilterName = {
    REGISTRATION_STATUS: "registration-status",
    REGISTRATION_TYPE: "registration-type",
};
export const RegistrationTypeFilterName = {
    SUPPORTED_ASSOCIATION_ISO_COUNTRY_CODE: "supported-association-iso-country-code",
    SUPPORTED_ASSOCIATION_RESOURCE_TYPE: "supported-association-resource-type",
};
export const RegistrationAssociationBehavior = {
    ASSOCIATE_AFTER_COMPLETE: "ASSOCIATE_AFTER_COMPLETE",
    ASSOCIATE_BEFORE_SUBMIT: "ASSOCIATE_BEFORE_SUBMIT",
    ASSOCIATE_ON_APPROVAL: "ASSOCIATE_ON_APPROVAL",
};
export const RegistrationDisassociationBehavior = {
    DELETE_REGISTRATION_DISASSOCIATES: "DELETE_REGISTRATION_DISASSOCIATES",
    DISASSOCIATE_ALL_ALLOWS_DELETE_REGISTRATION: "DISASSOCIATE_ALL_ALLOWS_DELETE_REGISTRATION",
    DISASSOCIATE_ALL_CLOSES_REGISTRATION: "DISASSOCIATE_ALL_CLOSES_REGISTRATION",
};
export const RegistrationVersionFilterName = {
    REGISTRATION_VERSION_STATUS: "registration-version-status",
};
export const SenderIdFilterName = {
    DELETION_PROTECTION_ENABLED: "deletion-protection-enabled",
    ISO_COUNTRY_CODE: "iso-country-code",
    MESSAGE_TYPE: "message-type",
    REGISTERED: "registered",
    SENDER_ID: "sender-id",
};
export const SpendLimitName = {
    MEDIA_MESSAGE_MONTHLY_SPEND_LIMIT: "MEDIA_MESSAGE_MONTHLY_SPEND_LIMIT",
    TEXT_MESSAGE_MONTHLY_SPEND_LIMIT: "TEXT_MESSAGE_MONTHLY_SPEND_LIMIT",
    VOICE_MESSAGE_MONTHLY_SPEND_LIMIT: "VOICE_MESSAGE_MONTHLY_SPEND_LIMIT",
};
export const VerifiedDestinationNumberFilterName = {
    STATUS: "status",
};
export const DestinationCountryParameterKey = {
    IN_ENTITY_ID: "IN_ENTITY_ID",
    IN_TEMPLATE_ID: "IN_TEMPLATE_ID",
};
export const ProtectStatus = {
    ALLOW: "ALLOW",
    BLOCK: "BLOCK",
    FILTER: "FILTER",
    MONITOR: "MONITOR",
};
export const LanguageCode = {
    DE_DE: "DE_DE",
    EN_GB: "EN_GB",
    EN_US: "EN_US",
    ES_419: "ES_419",
    ES_ES: "ES_ES",
    FR_CA: "FR_CA",
    FR_FR: "FR_FR",
    IT_IT: "IT_IT",
    JA_JP: "JA_JP",
    KO_KR: "KO_KR",
    PT_BR: "PT_BR",
    ZH_CN: "ZH_CN",
    ZH_TW: "ZH_TW",
};
export const PoolOriginationIdentitiesFilterName = {
    ISO_COUNTRY_CODE: "iso-country-code",
    NUMBER_CAPABILITY: "number-capability",
};
export const ProtectConfigurationRuleSetNumberOverrideFilterName = {
    ACTION: "action",
    CREATED_AFTER: "created-after",
    CREATED_BEFORE: "created-before",
    DESTINATION_PHONE_NUMBER_BEGINS_WITH: "destination-phone-number-begins-with",
    EXPIRES_AFTER: "expires-after",
    EXPIRES_BEFORE: "expires-before",
    ISO_COUNTRY_CODE: "iso-country-code",
};
export const RegistrationAssociationFilterName = {
    ISO_COUNTRY_CODE: "iso-country-code",
    RESOURCE_TYPE: "resource-type",
};
export const MessageFeedbackStatus = {
    FAILED: "FAILED",
    RECEIVED: "RECEIVED",
};
export const RequestableNumberType = {
    LONG_CODE: "LONG_CODE",
    SIMULATOR: "SIMULATOR",
    TEN_DLC: "TEN_DLC",
    TOLL_FREE: "TOLL_FREE",
};
export const VerificationChannel = {
    TEXT: "TEXT",
    VOICE: "VOICE",
};
export const VoiceMessageBodyTextType = {
    SSML: "SSML",
    TEXT: "TEXT",
};
export const VoiceId = {
    AMY: "AMY",
    ASTRID: "ASTRID",
    BIANCA: "BIANCA",
    BRIAN: "BRIAN",
    CAMILA: "CAMILA",
    CARLA: "CARLA",
    CARMEN: "CARMEN",
    CELINE: "CELINE",
    CHANTAL: "CHANTAL",
    CONCHITA: "CONCHITA",
    CRISTIANO: "CRISTIANO",
    DORA: "DORA",
    EMMA: "EMMA",
    ENRIQUE: "ENRIQUE",
    EWA: "EWA",
    FILIZ: "FILIZ",
    GERAINT: "GERAINT",
    GIORGIO: "GIORGIO",
    GWYNETH: "GWYNETH",
    HANS: "HANS",
    INES: "INES",
    IVY: "IVY",
    JACEK: "JACEK",
    JAN: "JAN",
    JOANNA: "JOANNA",
    JOEY: "JOEY",
    JUSTIN: "JUSTIN",
    KARL: "KARL",
    KENDRA: "KENDRA",
    KIMBERLY: "KIMBERLY",
    LEA: "LEA",
    LIV: "LIV",
    LOTTE: "LOTTE",
    LUCIA: "LUCIA",
    LUPE: "LUPE",
    MADS: "MADS",
    MAJA: "MAJA",
    MARLENE: "MARLENE",
    MATHIEU: "MATHIEU",
    MATTHEW: "MATTHEW",
    MAXIM: "MAXIM",
    MIA: "MIA",
    MIGUEL: "MIGUEL",
    MIZUKI: "MIZUKI",
    NAJA: "NAJA",
    NICOLE: "NICOLE",
    PENELOPE: "PENELOPE",
    RAVEENA: "RAVEENA",
    RICARDO: "RICARDO",
    RUBEN: "RUBEN",
    RUSSELL: "RUSSELL",
    SALLI: "SALLI",
    SEOYEON: "SEOYEON",
    TAKUMI: "TAKUMI",
    TATYANA: "TATYANA",
    VICKI: "VICKI",
    VITORIA: "VITORIA",
    ZEINA: "ZEINA",
    ZHIYU: "ZHIYU",
};
