FROM python:3.11-slim

# Install prerequisites and add PostgreSQL repository
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    lsb-release \
    supervisor \
    && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor -o /usr/share/keyrings/postgresql-keyring.gpg \
    && echo "deb [signed-by=/usr/share/keyrings/postgresql-keyring.gpg] http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list \
    && apt-get update \
    && apt-get install -y \
    postgresql-15 \
    postgresql-client-15 \
    && rm -rf /var/lib/apt/lists/*

# Create application directory
WORKDIR /app

# Copy application files
COPY backend/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY backend/ .
COPY frontend/dist ./static

# Create PostgreSQL data directory and set permissions
RUN mkdir -p /var/lib/postgresql/data && \
    chown -R postgres:postgres /var/lib/postgresql && \
    mkdir -p /var/run/postgresql && \
    chown -R postgres:postgres /var/run/postgresql

# Switch to postgres user to initialize database
USER postgres
RUN /usr/lib/postgresql/15/bin/initdb -D /var/lib/postgresql/data

# Configure PostgreSQL for network access
RUN echo "host all all 0.0.0.0/0 md5" >> /var/lib/postgresql/data/pg_hba.conf && \
    echo "listen_addresses='*'" >> /var/lib/postgresql/data/postgresql.conf && \
    echo "port=5432" >> /var/lib/postgresql/data/postgresql.conf

USER root

# Copy startup script
COPY docker/start-allinone.sh /start.sh
RUN chmod +x /start.sh

# Create entrypoint script that handles data directory initialization
RUN echo '#!/bin/bash' > /entrypoint.sh && \
    echo 'set -e' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo '# Initialize PostgreSQL data directory if empty' >> /entrypoint.sh && \
    echo 'if [ ! -s "/var/lib/postgresql/data/PG_VERSION" ]; then' >> /entrypoint.sh && \
    echo '  echo "Initializing PostgreSQL data directory..."' >> /entrypoint.sh && \
    echo '  mkdir -p /var/lib/postgresql/data' >> /entrypoint.sh && \
    echo '  chown -R postgres:postgres /var/lib/postgresql/data' >> /entrypoint.sh && \
    echo '  chmod 700 /var/lib/postgresql/data' >> /entrypoint.sh && \
    echo '  su - postgres -c "/usr/lib/postgresql/15/bin/initdb -D /var/lib/postgresql/data"' >> /entrypoint.sh && \
    echo '  echo "host all all 0.0.0.0/0 md5" >> /var/lib/postgresql/data/pg_hba.conf' >> /entrypoint.sh && \
    echo '  echo "listen_addresses='\'*\''" >> /var/lib/postgresql/data/postgresql.conf' >> /entrypoint.sh && \
    echo 'fi' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo '# Ensure correct permissions' >> /entrypoint.sh && \
    echo 'chown -R postgres:postgres /var/lib/postgresql/data' >> /entrypoint.sh && \
    echo 'chmod 700 /var/lib/postgresql/data' >> /entrypoint.sh && \
    echo '' >> /entrypoint.sh && \
    echo '# Start supervisord' >> /entrypoint.sh && \
    echo 'exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf' >> /entrypoint.sh && \
    chmod +x /entrypoint.sh

# Create supervisor configuration
RUN echo "[supervisord]" > /etc/supervisor/conf.d/supervisord.conf && \
    echo "nodaemon=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "user=root" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "[program:postgresql]" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "command=/usr/lib/postgresql/15/bin/postgres -D /var/lib/postgresql/data" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "user=postgres" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autostart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autorestart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "priority=10" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stdout_logfile=/dev/stdout" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stdout_logfile_maxbytes=0" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stderr_logfile=/dev/stderr" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stderr_logfile_maxbytes=0" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "[program:uvicorn]" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "command=/start.sh" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "directory=/app" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autostart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autorestart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "startsecs=10" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "startretries=3" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "priority=20" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stdout_logfile=/dev/stdout" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stdout_logfile_maxbytes=0" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stderr_logfile=/dev/stderr" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stderr_logfile_maxbytes=0" >> /etc/supervisor/conf.d/supervisord.conf

EXPOSE 8000

# Environment defaults
ENV DATABASE_URL=postgresql://ucgmax:changeme@localhost/ucgmax \
    SECRET_KEY=change-this-secret-key \
    HMAC_SECRET=change-this-hmac-secret \
    ADMIN_USER=admin \
    ADMIN_PASSWORD=changeme \
    ALERT_RETENTION_DAYS=30 \
    RATE_LIMIT_REQUESTS=100 \
    RATE_LIMIT_WINDOW=60 \
    LOG_LEVEL=INFO

CMD ["/entrypoint.sh"]
