name: Version Bump and Release

on:
  workflow_dispatch:
    inputs:
      bump-type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: 'patch'
      app:
        description: 'Application to bump'
        required: true
        type: choice
        options:
          - AWS_EUM_v3
        default: 'AWS_EUM_v3'

jobs:
  bump-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump version in package.json
        id: bump
        run: |
          cd Apps/${{ github.event.inputs.app }}
          
          # Get current version
          CURRENT_VERSION=$(cat package.json | grep '"version"' | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
          echo "Current version: $CURRENT_VERSION"
          
          # Bump version using npm
          npm version ${{ github.event.inputs.bump-type }} --no-git-tag-version
          
          # Get new version
          NEW_VERSION=$(cat package.json | grep '"version"' | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
          echo "New version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "old_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Update version in server.js
        run: |
          cd Apps/${{ github.event.inputs.app }}
          sed -i "s/const APP_VERSION = '.*';/const APP_VERSION = '${{ steps.bump.outputs.version }}';/" server.js
          echo "✅ Updated server.js"

      - name: Update version in Dockerfile
        run: |
          cd Apps/${{ github.event.inputs.app }}
          sed -i "s/version=\".*\"/version=\"${{ steps.bump.outputs.version }}\"/" Dockerfile
          sed -i "s/v[0-9]*\.[0-9]*\.[0-9]*/v${{ steps.bump.outputs.version }}/g" Dockerfile
          echo "✅ Updated Dockerfile"

      - name: Create changelog entry
        run: |
          cd Apps/${{ github.event.inputs.app }}
          DATE=$(date +%Y-%m-%d)
          
          # Create or update CHANGELOG.md
          if [ ! -f CHANGELOG.md ]; then
            echo "# Changelog" > CHANGELOG.md
            echo "" >> CHANGELOG.md
          fi
          
          # Add new version entry
          sed -i "2i\\
          ## [${{ steps.bump.outputs.version }}] - $DATE\n\n\
          ### Changed\n\
          - Version bump from ${{ steps.bump.outputs.old_version }} to ${{ steps.bump.outputs.version }}\n" CHANGELOG.md
          
          echo "✅ Updated CHANGELOG.md"

      - name: Commit changes
        run: |
          git add Apps/${{ github.event.inputs.app }}/package.json
          git add Apps/${{ github.event.inputs.app }}/server.js
          git add Apps/${{ github.event.inputs.app }}/Dockerfile
          git add Apps/${{ github.event.inputs.app }}/CHANGELOG.md 2>/dev/null || true
          git commit -m "chore(${{ github.event.inputs.app }}): bump version to ${{ steps.bump.outputs.version }}"
          git tag -a "v${{ steps.bump.outputs.version }}" -m "Release v${{ steps.bump.outputs.version }}"
          git push origin main
          git push origin "v${{ steps.bump.outputs.version }}"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump.outputs.version }}
          release_name: ${{ github.event.inputs.app }} v${{ steps.bump.outputs.version }}
          body: |
            ## ${{ github.event.inputs.app }} v${{ steps.bump.outputs.version }}
            
            ### Changes
            - Version bump from ${{ steps.bump.outputs.old_version }} to ${{ steps.bump.outputs.version }}
            
            ### Docker Image
            ```bash
            docker pull ghcr.io/n85uk/aws-eum-v3:${{ steps.bump.outputs.version }}
            ```
            
            ### Installation
            See the [README](https://github.com/N85UK/UNRAID_Apps/tree/main/Apps/${{ github.event.inputs.app }}) for installation instructions.
          draft: false
          prerelease: false
