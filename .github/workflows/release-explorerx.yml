name: Release ExplorerX Plugin

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      custom_version:
        description: 'Custom version (optional, overrides version_type)'
        required: false
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Get current version
        id: current_version
        run: |
          CURRENT=$(grep -o 'version.*"[^"]*"' ExplorerX_Plugin/explorerx.plg | cut -d'"' -f2)
          echo "current=$CURRENT" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT"

      - name: Calculate new version
        id: new_version
        run: |
          CURRENT="${{ steps.current_version.outputs.current }}"
          
          if [ -n "${{ github.event.inputs.custom_version }}" ]; then
            NEW_VERSION="${{ github.event.inputs.custom_version }}"
            echo "Using custom version: $NEW_VERSION"
          else
            # Parse current version
            IFS='.' read -ra VERSION_PARTS <<< "$CURRENT"
            MAJOR=${VERSION_PARTS[0]}
            MINOR=${VERSION_PARTS[1]}
            PATCH=${VERSION_PARTS[2]}
            
            # Bump version based on input
            case "${{ github.event.inputs.version_type }}" in
              "major")
                MAJOR=$((MAJOR + 1))
                MINOR=0
                PATCH=0
                ;;
              "minor")
                MINOR=$((MINOR + 1))
                PATCH=0
                ;;
              "patch")
                PATCH=$((PATCH + 1))
                ;;
            esac
            
            NEW_VERSION="$MAJOR.$MINOR.$PATCH"
            echo "Calculated new version: $NEW_VERSION"
          fi
          
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Check if source directory exists
        run: |
          if [ ! -d "ExplorerX_Plugin/source" ]; then
            echo "Creating source directory structure..."
            mkdir -p ExplorerX_Plugin/source/usr/local/emhttp/plugins/explorerx
            
            # Create a basic plugin structure if it doesn't exist
            cat > ExplorerX_Plugin/source/usr/local/emhttp/plugins/explorerx/explorerx.page << 'EOF'
          <?php
          $plugin = "explorerx";
          $docroot = $docroot ?? $_SERVER['DOCUMENT_ROOT'] ?: '/usr/local/emhttp';
          ?>

          <link type="text/css" rel="stylesheet" href="/plugins/<?=$plugin?>/styles/explorerx.css">

          <div id="explorerx-container">
            <div class="explorerx-header">
              <h1>ExplorerX - Advanced File Manager</h1>
              <p>Multi-pane file browser with bulk operations and background task queue</p>
            </div>
            
            <div class="explorerx-main">
              <div id="explorerx-browser">
                <div class="pane" id="left-pane">
                  <div class="pane-header">
                    <span class="path">/mnt/user</span>
                    <div class="controls">
                      <button onclick="refreshPane('left')">Refresh</button>
                    </div>
                  </div>
                  <div class="pane-content" id="left-content">
                    <!-- File browser content will be loaded here -->
                    <p>Loading file browser...</p>
                  </div>
                </div>
                
                <div class="pane" id="right-pane" style="display: none;">
                  <div class="pane-header">
                    <span class="path">/mnt</span>
                    <div class="controls">
                      <button onclick="refreshPane('right')">Refresh</button>
                    </div>
                  </div>
                  <div class="pane-content" id="right-content">
                    <!-- Second pane content -->
                  </div>
                </div>
              </div>
              
              <div class="toolbar">
                <button onclick="toggleDualPane()">Dual Pane</button>
                <button onclick="bulkOperations()">Bulk Ops</button>
                <button onclick="showTasks()">Tasks</button>
              </div>
            </div>
          </div>

          <script src="/plugins/<?=$plugin?>/js/explorerx.js"></script>
          EOF
            
            # Create basic CSS
            mkdir -p ExplorerX_Plugin/source/usr/local/emhttp/plugins/explorerx/styles
            cat > ExplorerX_Plugin/source/usr/local/emhttp/plugins/explorerx/styles/explorerx.css << 'EOF'
          #explorerx-container {
            padding: 20px;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
          }

          .explorerx-header {
            margin-bottom: 20px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
          }

          .explorerx-header h1 {
            margin: 0 0 5px 0;
            color: #333;
          }

          .explorerx-header p {
            margin: 0;
            color: #666;
            font-size: 14px;
          }

          #explorerx-browser {
            display: flex;
            gap: 10px;
            min-height: 500px;
            margin-bottom: 20px;
          }

          .pane {
            flex: 1;
            border: 1px solid #ddd;
            border-radius: 4px;
            overflow: hidden;
          }

          .pane-header {
            background: #f5f5f5;
            padding: 10px;
            border-bottom: 1px solid #ddd;
            display: flex;
            justify-content: space-between;
            align-items: center;
          }

          .pane-content {
            padding: 10px;
            height: 450px;
            overflow-y: auto;
          }

          .toolbar {
            display: flex;
            gap: 10px;
            padding: 10px;
            background: #f9f9f9;
            border-radius: 4px;
          }

          .toolbar button {
            padding: 8px 16px;
            border: 1px solid #ddd;
            background: white;
            border-radius: 4px;
            cursor: pointer;
          }

          .toolbar button:hover {
            background: #e9e9e9;
          }
          EOF
            
            # Create basic JavaScript
            mkdir -p ExplorerX_Plugin/source/usr/local/emhttp/plugins/explorerx/js
            cat > ExplorerX_Plugin/source/usr/local/emhttp/plugins/explorerx/js/explorerx.js << 'EOF'
          // ExplorerX Main JavaScript
          let dualPaneMode = false;

          function toggleDualPane() {
            dualPaneMode = !dualPaneMode;
            const rightPane = document.getElementById('right-pane');
            rightPane.style.display = dualPaneMode ? 'block' : 'none';
          }

          function refreshPane(pane) {
            console.log('Refreshing pane:', pane);
            // TODO: Implement pane refresh
          }

          function bulkOperations() {
            console.log('Opening bulk operations');
            // TODO: Implement bulk operations
          }

          function showTasks() {
            console.log('Showing background tasks');
            // TODO: Implement task viewer
          }

          // Initialize on page load
          document.addEventListener('DOMContentLoaded', function() {
            console.log('ExplorerX initialized');
          });
          EOF
            
            # Create plugin icon
            mkdir -p ExplorerX_Plugin/source/usr/local/emhttp/plugins/explorerx/images
            # Create a simple placeholder icon (base64 encoded 1x1 pixel)
            echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==" | base64 -d > ExplorerX_Plugin/source/usr/local/emhttp/plugins/explorerx/images/icon-explorerx.png
            
            echo "Basic plugin structure created"
          fi

      - name: Create package
        run: |
          cd ExplorerX_Plugin
          NEW_VERSION="${{ steps.new_version.outputs.version }}"
          PACKAGE_NAME="explorerx-${NEW_VERSION}-x86_64-1.txz"
          
          echo "Creating package: $PACKAGE_NAME"
          
          # Ensure packages directory exists
          mkdir -p packages
          
          # Create the package
          cd source
          tar -cJf "../packages/$PACKAGE_NAME" usr/
          cd ..
          
          # Generate MD5 hash
          cd packages
          md5sum "$PACKAGE_NAME" > "${PACKAGE_NAME}.md5"
          MD5_HASH=$(cut -d' ' -f1 "${PACKAGE_NAME}.md5")
          
          echo "Package created: $PACKAGE_NAME"
          echo "MD5 hash: $MD5_HASH"
          
          # Set outputs for later steps
          echo "package_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          echo "md5_hash=$MD5_HASH" >> $GITHUB_OUTPUT
        id: create_package

      - name: Update plugin manifest
        run: |
          NEW_VERSION="${{ steps.new_version.outputs.version }}"
          MD5_HASH="${{ steps.create_package.outputs.md5_hash }}"
          
          # Update version in plugin manifest
          sed -i "s/<!ENTITY version.*>/<!ENTITY version   \"$NEW_VERSION\">/" ExplorerX_Plugin/explorerx.plg
          
          # Update MD5 hash
          sed -i "s/<!ENTITY md5.*>/<!ENTITY md5       \"$MD5_HASH\">/" ExplorerX_Plugin/explorerx.plg
          
          # Add changelog entry
          CURRENT_DATE=$(date '+%Y-%m-%d')
          CHANGELOG_ENTRY="###v$NEW_VERSION ($CURRENT_DATE)\\n- Automated release via GitHub Actions\\n- Package updated with latest changes\\n\\n"
          
          # Insert changelog entry after the opening <CHANGES> tag
          sed -i "/<CHANGES>/a\\$CHANGELOG_ENTRY" ExplorerX_Plugin/explorerx.plg
          
          echo "Updated plugin manifest to version $NEW_VERSION"

      - name: Commit changes
        run: |
          git add ExplorerX_Plugin/
          git commit -m "🚀 Release ExplorerX v${{ steps.new_version.outputs.version }}

          - Automated release via GitHub Actions
          - Updated plugin manifest to v${{ steps.new_version.outputs.version }}
          - Created package: ${{ steps.create_package.outputs.package_name }}
          - MD5: ${{ steps.create_package.outputs.md5_hash }}"

      - name: Create and push tag
        run: |
          git tag -a "${{ steps.new_version.outputs.tag }}" -m "Release ${{ steps.new_version.outputs.tag }}"
          git push origin main
          git push origin "${{ steps.new_version.outputs.tag }}"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.new_version.outputs.tag }}
          release_name: ExplorerX Plugin v${{ steps.new_version.outputs.version }}
          body: |
            # ExplorerX Plugin v${{ steps.new_version.outputs.version }}
            
            ## 🚀 What's New
            - Automated release via GitHub Actions
            - Updated plugin manifest to v${{ steps.new_version.outputs.version }}
            - Enhanced plugin packaging process
            
            ## 📦 Installation
            
            **Method 1: Direct Installation (Recommended)**
            1. Go to **Plugins → Install Plugin** in UNRAID webGUI
            2. Enter URL: `https://raw.githubusercontent.com/N85UK/UNRAID_Apps/main/ExplorerX_Plugin/explorerx.plg`
            3. Click **Install**
            4. Navigate to **Tools → ExplorerX** to start using
            
            **Method 2: Manual Installation**
            ```bash
            # Download the package
            wget https://github.com/N85UK/UNRAID_Apps/releases/download/${{ steps.new_version.outputs.tag }}/${{ steps.create_package.outputs.package_name }}
            
            # Install
            cd /usr/local/emhttp/plugins
            tar -xf /path/to/${{ steps.create_package.outputs.package_name }}
            chmod -R 755 /usr/local/emhttp/plugins/explorerx
            ```
            
            ## ✨ Features
            - Multi-pane file browser with dual-pane navigation
            - Bulk file operations (copy, move, delete)
            - Background task queue with progress tracking
            - Quick file previews and keyboard shortcuts
            - ZIP/unzip support and checksum generation
            - CSRF protection and path sanitization
            - Responsive UI for mobile devices
            - Native UNRAID integration (no Docker required)
            
            ## 📋 Requirements
            - UNRAID 7.2.0-rc.1 or later
            - x86_64 architecture
            - PHP 8.x (included in UNRAID)
            
            ## 🐛 Support
            For issues, feature requests, or contributions:
            - [GitHub Issues](https://github.com/N85UK/UNRAID_Apps/issues)
            - [UNRAID Community Forums](https://forums.unraid.net)
            
            **Package Details:**
            - File: `${{ steps.create_package.outputs.package_name }}`
            - MD5: `${{ steps.create_package.outputs.md5_hash }}`
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ExplorerX_Plugin/packages/${{ steps.create_package.outputs.package_name }}
          asset_name: ${{ steps.create_package.outputs.package_name }}
          asset_content_type: application/x-xz

      - name: Upload MD5 Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ExplorerX_Plugin/packages/${{ steps.create_package.outputs.package_name }}.md5
          asset_name: ${{ steps.create_package.outputs.package_name }}.md5
          asset_content_type: text/plain

      - name: Summary
        run: |
          echo "## 🎉 Release Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ steps.new_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** ${{ steps.new_version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "**Package:** ${{ steps.create_package.outputs.package_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**MD5:** ${{ steps.create_package.outputs.md5_hash }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Installation URL" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "https://raw.githubusercontent.com/N85UK/UNRAID_Apps/main/ExplorerX_Plugin/explorerx.plg" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Release" >> $GITHUB_STEP_SUMMARY
          echo "[View Release](https://github.com/N85UK/UNRAID_Apps/releases/tag/${{ steps.new_version.outputs.tag }})" >> $GITHUB_STEP_SUMMARY