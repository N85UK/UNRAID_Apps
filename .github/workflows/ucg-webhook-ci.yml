name: UCG Max Webhook - CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'Apps/UCG-Max-Webhook-Receiver/**'
      - '.github/workflows/ucg-webhook-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'Apps/UCG-Max-Webhook-Receiver/**'
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && (github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch')
    
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Build frontend
      working-directory: Apps/UCG-Max-Webhook-Receiver/frontend
      run: |
        npm install
        npm run build
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository_owner }}/ucg-max-webhook-receiver
        tags: |
          type=raw,value=latest
          type=sha,prefix={{branch}}-
    
    - name: Build and push Docker image (standard)
      uses: docker/build-push-action@v5
      with:
        context: Apps/UCG-Max-Webhook-Receiver
        file: Apps/UCG-Max-Webhook-Receiver/docker/Dockerfile.backend
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Extract metadata (all-in-one)
      id: meta-allinone
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository_owner }}/ucg-max-webhook-receiver
        tags: |
          type=raw,value=allinone-latest
          type=sha,prefix=allinone-{{branch}}-
    
    - name: Build and push Docker image (all-in-one)
      uses: docker/build-push-action@v5
      with:
        context: Apps/UCG-Max-Webhook-Receiver
        file: Apps/UCG-Max-Webhook-Receiver/docker/Dockerfile.allinone
        push: true
        tags: ${{ steps.meta-allinone.outputs.tags }}
        labels: ${{ steps.meta-allinone.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
