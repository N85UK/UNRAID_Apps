name: Update Documentation

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'ExplorerX_Plugin/**'
      - 'Bounty_Submission/**'
      - 'CHANGELOG.md'
      - 'README.md'

jobs:
  update-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Extract plugin metadata
        id: plugin_info
        run: |
          VERSION=$(grep '<!ENTITY version' ExplorerX_Plugin/explorerx.plg | sed 's/.*"\([^"]*\)".*/\1/')
          AUTHOR=$(grep '<!ENTITY author' ExplorerX_Plugin/explorerx.plg | sed 's/.*"\([^"]*\)".*/\1/')
          NAME=$(grep '<!ENTITY name' ExplorerX_Plugin/explorerx.plg | sed 's/.*"\([^"]*\)".*/\1/')
          MIN_VERSION=$(grep '<!ENTITY min' ExplorerX_Plugin/explorerx.plg | sed 's/.*"\([^"]*\)".*/\1/')
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "author=$AUTHOR" >> $GITHUB_OUTPUT
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "min_version=$MIN_VERSION" >> $GITHUB_OUTPUT
          
          echo "Extracted plugin info:"
          echo "  Name: $NAME"
          echo "  Version: $VERSION"
          echo "  Author: $AUTHOR"
          echo "  Min UNRAID: $MIN_VERSION"

      - name: Update README badges
        run: |
          # Update README.md with current version badge
          VERSION="${{ steps.plugin_info.outputs.version }}"
          
          # Create/update version badge
          BADGE_URL="https://img.shields.io/badge/version-${VERSION}-blue"
          sed -i "s|https://img.shields.io/badge/version-.*-blue|$BADGE_URL|g" README.md
          
          # Update installation URL in README if needed
          INSTALL_URL="https://raw.githubusercontent.com/N85UK/UNRAID_Apps/main/ExplorerX_Plugin/explorerx.plg"
          sed -i "s|https://raw.githubusercontent.com/.*/ExplorerX_Plugin/explorerx.plg|$INSTALL_URL|g" README.md
          
          echo "Updated README badges and URLs"

      - name: Generate plugin documentation
        run: |
          cat > ExplorerX_Plugin/INSTALL.md << 'EOF'
          # ExplorerX Plugin Installation Guide
          
          ## Quick Installation
          
          ### Method 1: Direct Plugin Installation (Recommended)
          
          1. **Open UNRAID WebGUI**
          2. **Navigate to Plugins**
             - Go to `Plugins` → `Install Plugin`
          3. **Install Plugin**
             - Paste this URL:
             ```
             https://raw.githubusercontent.com/N85UK/UNRAID_Apps/main/ExplorerX_Plugin/explorerx.plg
             ```
             - Click `Install`
          4. **Access ExplorerX**
             - Navigate to `ExplorerX` tab (standalone tab, not in Tools menu)
          
          ### Method 2: Community Applications
          
          1. **Install Community Applications** (if not already installed)
             - Search for "Community Applications" in Plugins
          2. **Search for ExplorerX**
             - Go to `Apps` tab
             - Search for "ExplorerX"
             - Click `Install`
          
          ## Manual Installation
          
          If you prefer manual installation:
          
          ```bash
          # Download the package
          VERSION="${{ steps.plugin_info.outputs.version }}"
          PACKAGE="explorerx-${VERSION}-x86_64-1.txz"
          wget "https://github.com/N85UK/UNRAID_Apps/releases/download/v${VERSION}/${PACKAGE}"
          
          # Extract to plugins directory
          cd /usr/local/emhttp/plugins
          tar -xf "/path/to/${PACKAGE}"
          
          # Set permissions
          chmod -R 755 /usr/local/emhttp/plugins/explorerx
          chown -R root:root /usr/local/emhttp/plugins/explorerx
          ```
          
          ## System Requirements
          
          - **UNRAID Version**: ${{ steps.plugin_info.outputs.min_version }} or later
          - **Architecture**: x86_64
          - **Memory**: 20MB RAM minimum
          - **Storage**: 10MB disk space
          - **Dependencies**: PHP 8.x (included in UNRAID)
          
          ## First Launch
          
          1. **Navigate to ExplorerX tab**
          2. **Review default settings**
             - Default root path: `/mnt`
             - All features enabled by default
          3. **Start exploring!**
             - Use dual-pane mode for advanced operations
             - Try keyboard shortcuts for faster navigation
          
          ## Configuration
          
          Configuration file location: `/boot/config/plugins/explorerx/settings.cfg`
          
          ```ini
          # Security: Default root path (modify with caution)
          ROOT_PATH=/mnt
          
          # Features
          ENABLE_ZIP=true
          ENABLE_CHECKSUMS=true
          ENABLE_PREVIEWS=true
          ENABLE_BULK_OPS=true
          
          # Background task limits
          MAX_CONCURRENT_TASKS=3
          TASK_TIMEOUT=3600
          
          # UI preferences
          DEFAULT_VIEW=list
          SHOW_HIDDEN_FILES=false
          DUAL_PANE_DEFAULT=false
          ```
          
          ## Troubleshooting
          
          ### Plugin Not Appearing in Tools Menu
          
          1. **Check installation**:
             ```bash
             ls -la /usr/local/emhttp/plugins/explorerx/
             ```
          
          2. **Restart web server**:
             ```bash
             nginx -s reload
             ```
          
          ### Permission Issues
          
          1. **Fix file permissions**:
             ```bash
             chmod -R 755 /usr/local/emhttp/plugins/explorerx
             chown -R root:root /usr/local/emhttp/plugins/explorerx
             ```
          
          2. **Check PHP logs**:
             ```bash
             tail -f /var/log/nginx/error.log
             ```
          
          ### Background Tasks Stuck
          
          1. **Check task queue**:
             ```bash
             cat /boot/config/plugins/explorerx/queue.json
             ```
          
          2. **Clear stuck tasks**:
             ```bash
             echo '{"tasks":[],"version":"${{ steps.plugin_info.outputs.version }}"}' > /boot/config/plugins/explorerx/queue.json
             ```
          
          ## Uninstallation
          
          ### Via UNRAID WebGUI
          
          1. Go to `Plugins` page
          2. Find `ExplorerX` in installed plugins
          3. Click `Remove`
          
          ### Manual Uninstallation
          
          ```bash
          # Remove plugin files
          rm -rf /usr/local/emhttp/plugins/explorerx
          
          # Remove configuration (optional)
          rm -rf /boot/config/plugins/explorerx
          
          # Remove logs (optional)
          rm -rf /var/log/explorerx
          ```
          
          ## Support
          
          - **Issues**: [GitHub Issues](https://github.com/N85UK/UNRAID_Apps/issues)
          - **Forum**: [UNRAID Community Forums](https://forums.unraid.net)
          - **Documentation**: [Project Wiki](https://github.com/N85UK/UNRAID_Apps/wiki)
          
          ---
          
          **Version**: ${{ steps.plugin_info.outputs.version }}  
          **Author**: ${{ steps.plugin_info.outputs.author }}  
          **Updated**: $(date '+%Y-%m-%d')
          EOF
          
          echo "Generated installation documentation"

      - name: Update version references
        run: |
          VERSION="${{ steps.plugin_info.outputs.version }}"
          
          # Update version references in documentation
          find . -name "*.md" -not -path "./.git/*" -exec sed -i "s/v[0-9]\{4\}\.[0-9]\{2\}\.[0-9]\{2\}\.[0-9]\{2\}\.[0-9]\{2\}/v$VERSION/g" {} \;
          
          # Update ExplorerX Plugin README with current version
          if [ -f "ExplorerX_Plugin/README.md" ]; then
            sed -i "s/v[0-9]\{4\}\.[0-9]\{2\}\.[0-9]\{2\}\.[0-9]\{2\}\.[0-9]\{2\}/v$VERSION/g" ExplorerX_Plugin/README.md
          fi
          
          echo "Updated version references to $VERSION"

      - name: Generate changelog entry
        run: |
          # Check if CHANGELOG.md needs updating for current version
          VERSION="${{ steps.plugin_info.outputs.version }}"
          
          if ! grep -q "## \[${VERSION}\]" CHANGELOG.md; then
            echo "Adding changelog entry for version $VERSION"
            
            # Create temporary changelog
            cat > temp_changelog.md << EOF
          # Changelog
          
          All notable changes to the UNRAID Apps project will be documented in this file.
          
          The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
          and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
          
          ## [Unreleased]
          
          ## [$VERSION] - $(date '+%Y-%m-%d')
          
          ### Added
          - ExplorerX Plugin v$VERSION
          - Automated release process via GitHub Actions
          - Enhanced plugin documentation
          
          ### Changed
          - Updated plugin manifest and packaging
          - Improved installation reliability
          
          ### Fixed
          - Package download URL issues
          - MD5 hash validation
          
          EOF
          
            # Append existing changelog (skip first few lines)
            tail -n +8 CHANGELOG.md >> temp_changelog.md
            mv temp_changelog.md CHANGELOG.md
          else
            echo "Changelog already contains entry for version $VERSION"
          fi

      - name: Commit documentation updates
        run: |
          git add .
          
          if git diff --staged --quiet; then
            echo "No documentation changes to commit"
          else
            git commit -m "📚 Update documentation for ExplorerX v${{ steps.plugin_info.outputs.version }}

            - Generated installation guide
            - Updated version references
            - Added changelog entry
            - Updated README badges
            
            [skip ci]"
            
            git push origin main
            echo "Documentation updated and pushed"
          fi

      - name: Summary
        run: |
          echo "## 📚 Documentation Update Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📝 Updates:" >> $GITHUB_STEP_SUMMARY
          echo "- Installation guide generated" >> $GITHUB_STEP_SUMMARY
          echo "- Version references updated" >> $GITHUB_STEP_SUMMARY
          echo "- README badges refreshed" >> $GITHUB_STEP_SUMMARY
          echo "- Changelog entry added" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Plugin Info:" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** ${{ steps.plugin_info.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Author:** ${{ steps.plugin_info.outputs.author }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Min UNRAID:** ${{ steps.plugin_info.outputs.min_version }}" >> $GITHUB_STEP_SUMMARY