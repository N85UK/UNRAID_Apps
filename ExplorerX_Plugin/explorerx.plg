<?xml version="1.0" standalone="yes"?>
<!DOCTYPE PLUGIN [
<!ENTITY name      "explorerx">
<!ENTITY author    "N85UK">
<!ENTITY version   "2025.10.06.01.00">
<!ENTITY md5       "49db9f497eebf270505dd1d2728e862c">
<!ENTITY launch    "ExplorerX">
<!ENTITY gitURL    "https://github.com/N85UK/UNRAID_Apps">
<!ENTITY pluginURL "&gitURL;/raw/main/ExplorerX_Plugin/explorerx.plg">
<!ENTITY packageURL "&gitURL;/raw/main/ExplorerX_Plugin/packages/explorerx-&version;-x86_64-1.txz">
<!ENTITY versionURL "&gitURL;/raw/main/ExplorerX_Plugin/version.json">
<!ENTITY support   "&gitURL;/issues">
<!ENTITY min       "7.2.0-rc.1">
]>

<PLUGIN name="&name;" author="&author;" version="&version;" launch="&launch;" pluginURL="&pluginURL;" versionURL="&versionURL;" support="&support;" min="&min;">

<CHANGES>
###v2025.10.06.01.00 (2025-10-06)
- CRITICAL FIX: Fixed permission issues causing plugin installation failure
- Removed macOS metadata files that interfere with installation
- Enhanced permission fixing to handle ownership problems
- Fixed page file verification and plugin interface loading
- Comprehensive cleanup of problematic files before installation
- Updated to version 2025.10.06.01.00

###v2025.10.05.08.00 (2025-10-05)
- EMERGENCY: Fix for missing plugins issue after installation
- Added comprehensive plugin system diagnostics
- Safe installation that preserves existing plugins
- Plugin directory recovery procedures
- Enhanced logging for troubleshooting
- Updated to version 2025.10.05.08.00

###v2025.10.05.07.00 (2025-10-05)
- Fixed PHP syntax checking path issue
- Improved installation error handling and recovery
- Enhanced path validation in installation script
- Better error messages and troubleshooting
- Updated to version 2025.10.05.07.00

###v2025.10.05.06.00 (2025-10-05)
- Emergency fix for 500 Internal Server Error
- Added comprehensive error handling and diagnostics
- Simplified installation process to identify issues
- Enhanced nginx and service recovery procedures
- Updated to version 2025.10.05.06.00

###v2025.10.05.05.00 (2025-10-05)
- Enhanced plugin cleanup and diagnostics
- Force complete removal of all cached plugin data
- Added diagnostic information to track installation issues
- Simplified plugin structure for reliability
- Fixed workflow security scan exclusions
- Updated to version 2025.10.05.05.00

###v2025.10.05.04.00 (2025-10-05)
- Force clean installation to fix PHP code display issue
- Fixed GitHub Actions security scan to allow legitimate plugin cleanup
- Improved plugin architecture and caching issues
- Ensured proper plugin interface loading
- Updated to version 2025.10.05.04.00

###v2025.10.05.03.00 (2025-10-05)
- Fixed API issues causing PHP code display instead of file browser
- Cleaned up api.php file - removed unused functions and dead code
- Simplified plugin architecture for better stability
- Fixed plugin interface display problems
- Updated to version 2025.10.05.03.00

###v2025.10.05.02.00 (2025-10-05)
- Test update notification system - minor UI improvements
- Updated to version 2025.10.05.02.00
- Auto-generated documentation updates
- Package rebuilt with latest changes

###v2025.10.05.01.00 (2025-10-05)
- Initial release of ExplorerX
- Simplified native file manager implementation
- Standalone tab interface (not in Tools menu)
- Basic directory navigation and file listing
- Real-time file operations via API
- Clean, responsive UI design
- Auto-update notification system
- Compatible with UNRAID 7.2.0+
</CHANGES>

<!--
ExplorerX - Native File Manager for Unraid
==========================================

A simple, native file manager plugin for Unraid 7.2.0+ that provides:
- Clean standalone interface (not in Tools menu)
- Basic directory navigation and file listing
- Simple file operations
- Auto-update notifications
- Zero Docker overhead

INSTALLATION:
1. Go to Plugins ‚Üí Install Plugin
2. Enter URL: https://raw.githubusercontent.com/N85UK/UNRAID_Apps/main/ExplorerX_Plugin/explorerx.plg
3. Click Install
4. Navigate to ExplorerX tab

REQUIREMENTS:
- Unraid 7.2.0-rc.1 or later
- x86_64 architecture
- PHP 8.x (included in Unraid)

SUPPORT:
https://github.com/N85UK/UNRAID_Apps/issues
-->

<!-- Cleanup previous installation -->
<FILE Run="/bin/bash">
<INLINE>
<![CDATA[
echo "================================================="
echo "ExplorerX Plugin Installation (CRITICAL PERMISSION FIX)"
echo "Version: &version;"
echo "================================================="

# EMERGENCY DIAGNOSTICS - Check current plugin system state
echo "üîç SYSTEM DIAGNOSTICS:"
echo "Current plugin directory contents:"
ls -la /usr/local/emhttp/plugins/ 2>/dev/null || echo "‚ùå Plugin directory not accessible"

echo ""
echo "Checking for problematic files:"
ls -la /usr/local/emhttp/plugins/ | grep "503\|games\|_\." || echo "No permission issues found"

# COMPREHENSIVE cleanup - fix all permission issues
echo ""
echo "üõ°Ô∏è COMPREHENSIVE CLEANUP:"

# Remove the problematic macOS metadata file
if [ -f /usr/local/emhttp/plugins/._explorerx ]; then
  echo "Removing macOS metadata file..."
  rm -f /usr/local/emhttp/plugins/._explorerx
  echo "‚úÖ Metadata file removed"
fi

# Fix ownership of the entire plugins directory if needed
echo "Fixing plugin directory permissions..."
chown -R root:root /usr/local/emhttp/plugins/ 2>/dev/null || true

# Remove existing explorerx installation completely
if [ -d /usr/local/emhttp/plugins/explorerx ]; then
  echo "Removing existing ExplorerX installation..."
  rm -rf /usr/local/emhttp/plugins/explorerx
  echo "‚úÖ Existing installation removed"
else
  echo "‚ÑπÔ∏è No existing ExplorerX installation found"
fi

# Clean our specific cache/log files
rm -rf /tmp/plugins/&name; 2>/dev/null || true
rm -rf /var/log/plugins/&name; 2>/dev/null || true

# Clean our downloads, preserve others
if [ -d /boot/config/plugins/&name; ]; then
  echo "Cleaning ExplorerX downloads only..."
  find /boot/config/plugins/&name; -name "explorerx-*.txz" -type f -delete 2>/dev/null || true
fi

echo "‚úÖ Comprehensive cleanup completed"
echo ""
]]>
</INLINE>
</FILE>

<!-- Download and verify package -->
<FILE Name="/boot/config/plugins/&name;/&name;-&version;.txz" Run="upgradepkg --install-new">
<URL>&packageURL;</URL>
<MD5>&md5;</MD5>
</FILE>

<!-- Extract and install plugin -->
<FILE Run="/bin/bash">
<INLINE>
<![CDATA[
echo "================================================="
echo "Installing ExplorerX Plugin (PERMISSION FIX)"
echo "================================================="

# Check plugin system health BEFORE installation
echo "üîç PRE-INSTALLATION DIAGNOSTICS:"
echo "Plugin directory contents before installation:"
ls -la /usr/local/emhttp/plugins/ | head -20

echo ""
echo "Available plugin pages:"
find /usr/local/emhttp/plugins/ -name "*.page" 2>/dev/null | head -5 || echo "No .page files found"

# Ensure proper ownership of plugins directory
echo ""
echo "üîß FIXING DIRECTORY OWNERSHIP:"
chown -R root:root /usr/local/emhttp/plugins/ 2>/dev/null || true
chmod 755 /usr/local/emhttp/plugins/ 2>/dev/null || true

# Extract plugin package with minimal impact
cd /usr/local/emhttp/plugins
echo ""
echo "üì¶ EXTRACTING PLUGIN PACKAGE:"
if ! tar -xf /boot/config/plugins/&name;/&name;-&version;.txz; then
  echo "‚ùå ERROR: Failed to extract plugin package"
  echo "üîÑ Checking if nginx needs restart..."
  if ! pgrep nginx > /dev/null; then
    echo "Starting nginx..."
    /etc/rc.d/rc.nginx start 2>&1
  fi
  exit 1
fi

# Verify extraction and fix permissions immediately
if [ ! -d /usr/local/emhttp/plugins/&name; ]; then
  echo "‚ùå ERROR: Plugin directory not found after extraction"
  echo "Available directories:"
  ls -la /usr/local/emhttp/plugins/ | head -10
  exit 1
fi

# CRITICAL: Fix all permissions and ownership
echo "üîß SETTING CORRECT PERMISSIONS:"
chown -R root:root /usr/local/emhttp/plugins/&name; 2>&1
chmod -R 755 /usr/local/emhttp/plugins/&name; 2>&1
find /usr/local/emhttp/plugins/&name; -type f -name "*.php" -exec chmod 644 {} \; 2>/dev/null || true
find /usr/local/emhttp/plugins/&name; -type f -name "*.page" -exec chmod 644 {} \; 2>/dev/null || true

# Enhanced file verification
echo "üìã ENHANCED FILE VERIFICATION:"
PLUGIN_DIR="/usr/local/emhttp/plugins/&name;"

# Check for page file
if [ -f "$PLUGIN_DIR/explorerx.page" ]; then
  echo "‚úÖ Page file found: $(ls -la $PLUGIN_DIR/explorerx.page)"
  # Verify it's readable
  if [ -r "$PLUGIN_DIR/explorerx.page" ]; then
    echo "‚úÖ Page file is readable"
  else
    echo "‚ùå Page file is not readable - fixing permissions"
    chmod 644 "$PLUGIN_DIR/explorerx.page"
  fi
else
  echo "‚ùå Page file missing - checking contents:"
  ls -la "$PLUGIN_DIR/" || echo "Directory not accessible"
  exit 1
fi

# Check for API file
if [ -f "$PLUGIN_DIR/include/api.php" ]; then
  echo "‚úÖ API file found: $(ls -la $PLUGIN_DIR/include/api.php)"
else
  echo "‚ùå API file missing"
  ls -la "$PLUGIN_DIR/include/" 2>/dev/null || echo "Include directory missing"
  exit 1
fi

# Final ownership verification
echo ""
echo "üîç FINAL OWNERSHIP VERIFICATION:"
ls -la /usr/local/emhttp/plugins/&name;/ | head -5

# Check plugin system status AFTER installation
echo ""
echo "üîç POST-INSTALLATION DIAGNOSTICS:"
echo "Plugin directory contents after installation:"
ls -la /usr/local/emhttp/plugins/ | grep -E "(explorerx|total|root.*root)" | head -10

echo ""
echo "Plugin pages now available:"
find /usr/local/emhttp/plugins/ -name "*.page" 2>/dev/null | wc -l | xargs echo "Plugin pages found:"

# Ensure services are running
echo ""
echo "üîÑ SERVICE STATUS CHECK:"
if ! pgrep nginx > /dev/null; then
  echo "Starting nginx..."
  /etc/rc.d/rc.nginx start 2>&1
else
  echo "‚úÖ Nginx is running"
fi

echo ""
echo "================================================="
echo "‚úÖ ExplorerX Plugin Installation Completed!"
echo "================================================="
echo ""
echo "üîç VERIFICATION STEPS:"
echo "1. Check Plugins page should now show ExplorerX"
echo "2. Navigate to ExplorerX tab should work"
echo "3. If still issues, check file permissions:"
echo "   ls -la /usr/local/emhttp/plugins/explorerx/"
echo ""
echo "üìß For support: &support;"
echo "================================================="
]]>
</INLINE>
</FILE>

<!-- Uninstall procedure -->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
<![CDATA[
echo "================================================="
echo "Uninstalling ExplorerX Plugin"
echo "================================================="

# Remove plugin files
echo "Removing plugin files..."
rm -rf /usr/local/emhttp/plugins/&name;

echo "================================================="
echo "ExplorerX Plugin Uninstalled"
echo "================================================="
]]>
</INLINE>
</FILE>

</PLUGIN>
