<?xml version="1.0" standalone="yes"?>
<!DOCTYPE PLUGIN [
<!ENTITY name      "explorerx">
<!ENTITY author    "N85UK">
<!ENTITY version   "2025.10.10.02.00">
<!ENTITY md5       "136a795e8fd7ad5f706b9c2d2614a4fd">
<!ENTITY launch    "explorerx">
<!ENTITY gitURL    "https://github.com/N85UK/UNRAID_Apps">
<!ENTITY pluginURL "&gitURL;/raw/main/ExplorerX_Plugin/explorerx.plg">
<!ENTITY packageURL "&gitURL;/raw/main/ExplorerX_Plugin/packages/explorerx-&version;-x86_64-1.txz">
<!ENTITY versionURL "&gitURL;/raw/main/ExplorerX_Plugin/version.json">
<!ENTITY support   "&gitURL;/issues">
<!ENTITY min       "7.2.0-rc.1">
]>

<PLUGIN name="&name;" author="&author;" version="&version;" launch="&launch;" pluginURL="&pluginURL;" versionURL="&versionURL;" support="&support;" min="&min;">

<CHANGES>
###v2025.10.10.02.00 (2025-10-10)
- PACKAGE VERIFICATION: Added post-download verification to detect wrong cached packages
- Automatic correction if UNRAID downloads old cached version instead of current
- Force re-download of correct package if wrong version detected
- MD5 verification with automatic retry if hash mismatch
- Comprehensive package validation before installation
- Updated to version 2025.10.10.02.00

###v2025.10.10.01.00 (2025-10-10)
- CACHE REFRESH: Force UNRAID to download latest fixed package
- Added cache busting mechanism to prevent old package downloads
- Same fixes as v2025.10.09.02.00 but with forced cache refresh
- Ensures installation extraction fix is properly applied
- Updated to version 2025.10.10.01.00

###v2025.10.09.02.00 (2025-10-09)
- CRITICAL FIX: Fixed package extraction failure during installation
- Corrected tar extraction directory from plugins/ to root (/) for proper path handling
- Fixed "Plugin directory not found after extraction" error
- Package structure now properly extracts to /usr/local/emhttp/plugins/explorerx/
- Installation process now works correctly on UNRAID systems
- Updated to version 2025.10.09.02.00

###v2025.10.09.01.00 (2025-10-09)
- CRITICAL FIX: Resolved blank page issue when navigating to /ExplorerX
- Fixed launch URL mismatch: Changed from "ExplorerX" to "explorerx" to match page filename
- Fixed page header formatting: Removed invalid indentation and delimiter issues
- Updated menu placement: Changed from invalid "UNRAID:5" to "61" for standalone tab
- Corrected icon reference to use available PNG file
- Fixed case-sensitive filesystem compatibility issue
- Plugin should now load properly and display file browser interface
- Addresses all issues identified in ChatGPT analysis

###v2025.10.06.02.00 (2025-10-06)
- SAFE INSTALLATION: Fixed all dangerous installation scripts
- Only touches ExplorerX files - never modifies other plugins
- Standalone tab interface (not in Tools menu)
- Safe permission handling - only for ExplorerX directory
- Completely rewritten installation scripts for safety
- No global plugin directory modifications
- Enhanced error handling and recovery
- Updated to version 2025.10.06.02.00

###v2025.10.06.01.00 (2025-10-06)
- CRITICAL FIX: Fixed permission issues causing plugin installation failure
- Removed macOS metadata files that interfere with installation
- Enhanced permission fixing to handle ownership problems
- Fixed page file verification and plugin interface loading
- Comprehensive cleanup of problematic files before installation
- Updated to version 2025.10.06.01.00

###v2025.10.05.08.00 (2025-10-05)
- EMERGENCY: Fix for missing plugins issue after installation
- Added comprehensive plugin system diagnostics
- Safe installation that preserves existing plugins
- Plugin directory recovery procedures
- Enhanced logging for troubleshooting
- Updated to version 2025.10.05.08.00

###v2025.10.05.07.00 (2025-10-05)
- Fixed PHP syntax checking path issue
- Improved installation error handling and recovery
- Enhanced path validation in installation script
- Better error messages and troubleshooting
- Updated to version 2025.10.05.07.00

###v2025.10.05.06.00 (2025-10-05)
- Emergency fix for 500 Internal Server Error
- Added comprehensive error handling and diagnostics
- Simplified installation process to identify issues
- Enhanced nginx and service recovery procedures
- Updated to version 2025.10.05.06.00

###v2025.10.05.05.00 (2025-10-05)
- Enhanced plugin cleanup and diagnostics
- Force complete removal of all cached plugin data
- Added diagnostic information to track installation issues
- Simplified plugin structure for reliability
- Fixed workflow security scan exclusions
- Updated to version 2025.10.05.05.00

###v2025.10.05.04.00 (2025-10-05)
- Force clean installation to fix PHP code display issue
- Fixed GitHub Actions security scan to allow legitimate plugin cleanup
- Improved plugin architecture and caching issues
- Ensured proper plugin interface loading
- Updated to version 2025.10.05.04.00

###v2025.10.05.03.00 (2025-10-05)
- Fixed API issues causing PHP code display instead of file browser
- Cleaned up api.php file - removed unused functions and dead code
- Simplified plugin architecture for better stability
- Fixed plugin interface display problems
- Updated to version 2025.10.05.03.00

###v2025.10.05.02.00 (2025-10-05)
- Test update notification system - minor UI improvements
- Updated to version 2025.10.05.02.00
- Auto-generated documentation updates
- Package rebuilt with latest changes

###v2025.10.05.01.00 (2025-10-05)
- Initial release of ExplorerX
- Simplified native file manager implementation
- Standalone tab interface (not in Tools menu)
- Basic directory navigation and file listing
- Real-time file operations via API
- Clean, responsive UI design
- Auto-update notification system
- Compatible with UNRAID 7.2.0+
</CHANGES>

<!--
ExplorerX - Native File Manager for Unraid
==========================================

A simple, native file manager plugin for Unraid 7.2.0+ that provides:
- Clean standalone interface (not in Tools menu)
- Basic directory navigation and file listing
- Simple file operations
- Auto-update notifications
- Zero Docker overhead

INSTALLATION:
1. Go to Plugins → Install Plugin
2. Enter URL: https://raw.githubusercontent.com/N85UK/UNRAID_Apps/main/ExplorerX_Plugin/explorerx.plg
3. Click Install
4. Navigate to ExplorerX tab

REQUIREMENTS:
- Unraid 7.2.0-rc.1 or later
- x86_64 architecture
- PHP 8.x (included in Unraid)

SUPPORT:
https://github.com/N85UK/UNRAID_Apps/issues
-->

<!-- Cleanup previous installation -->
<FILE Run="/bin/bash">
<INLINE>
<![CDATA[
echo "================================================="
echo "ExplorerX Plugin Installation (SAFE VERSION)"
echo "Version: &version;"
echo "================================================="

# SAFE DIAGNOSTICS - Only check our plugin status
echo "🔍 SAFE INSTALLATION DIAGNOSTICS:"
echo "Checking ExplorerX plugin status only..."

# Check if our plugin directory exists
if [ -d /usr/local/emhttp/plugins/explorerx ]; then
  echo "ℹ️ ExplorerX directory found - will be safely replaced"
  ls -la /usr/local/emhttp/plugins/explorerx/ | head -3
else
  echo "ℹ️ Fresh ExplorerX installation"
fi

# SAFE cleanup - ONLY remove our own files
echo ""
echo "🛡️ SAFE CLEANUP (ExplorerX only):"

# FORCE REMOVE ALL cached ExplorerX packages to prevent version conflicts
echo "🧹 FORCE CACHE CLEANUP: Removing all cached ExplorerX packages..."
if [ -d /boot/config/plugins/explorerx ]; then
  echo "Cleaning ExplorerX downloads directory..."
  rm -rf /boot/config/plugins/explorerx/*.txz 2>/dev/null || true
  rm -rf /boot/config/plugins/explorerx/explorerx-*.txz 2>/dev/null || true
  find /boot/config/plugins/explorerx -name "*.txz*" -delete 2>/dev/null || true
  echo "✅ All cached packages removed - will force fresh download"
fi

# Also clean any temporary cache locations
rm -rf /tmp/explorerx-*.txz 2>/dev/null || true
rm -rf /var/cache/*explorerx* 2>/dev/null || true

# Remove ONLY macOS metadata files related to ExplorerX
if [ -f /usr/local/emhttp/plugins/._explorerx ]; then
  echo "Removing ExplorerX metadata file..."
  rm -f /usr/local/emhttp/plugins/._explorerx
  echo "✅ ExplorerX metadata file removed"
fi

# Remove ONLY our plugin directory
if [ -d /usr/local/emhttp/plugins/explorerx ]; then
  echo "Removing only ExplorerX directory..."
  rm -rf /usr/local/emhttp/plugins/explorerx
  echo "✅ ExplorerX directory safely removed"
fi

# Clean ONLY our specific cache/log files
rm -rf /tmp/plugins/explorerx 2>/dev/null || true
rm -rf /var/log/plugins/explorerx 2>/dev/null || true

# Clean ONLY our downloads
if [ -d /boot/config/plugins/explorerx ]; then
  echo "Cleaning ExplorerX downloads only..."
  find /boot/config/plugins/explorerx -name "explorerx-*.txz" -type f -delete 2>/dev/null || true
fi

echo "✅ Safe cleanup completed - no other plugins touched"
echo ""
]]>
</INLINE>
</FILE>

<!-- Download and verify package -->
<FILE Name="/boot/config/plugins/&name;/&name;-&version;.txz" Run="upgradepkg --install-new">
<URL>&packageURL;</URL>
<MD5>&md5;</MD5>
</FILE>

<!-- Verify correct package was downloaded and fix if needed -->
<FILE Run="/bin/bash">
<INLINE>
<![CDATA[
echo "🔍 PACKAGE VERIFICATION:"
echo "Expected: explorerx-&version;.txz"
echo "Checking downloaded package..."

EXPECTED_FILE="/boot/config/plugins/explorerx/explorerx-&version;.txz"
PLUGIN_DIR="/boot/config/plugins/explorerx"

# Check what was actually downloaded
if [ -d "$PLUGIN_DIR" ]; then
  echo "Files in download directory:"
  ls -la "$PLUGIN_DIR/"
  
  # Check if wrong version was downloaded
  if [ ! -f "$EXPECTED_FILE" ]; then
    echo "❌ Wrong package downloaded! Expected: explorerx-&version;.txz"
    
    # Find any explorerx package files
    OLD_FILES=$(find "$PLUGIN_DIR" -name "explorerx-*.txz" -type f)
    if [ -n "$OLD_FILES" ]; then
      echo "🔄 Found old cached package(s), downloading correct version..."
      
      # Remove old packages
      rm -f "$PLUGIN_DIR"/explorerx-*.txz
      
      # Force download correct package
      echo "⬇️ Force downloading: &packageURL;"
      if wget -O "$EXPECTED_FILE" "&packageURL;"; then
        echo "✅ Correct package downloaded successfully"
      else
        echo "❌ Failed to download correct package"
        exit 1
      fi
    fi
  else
    echo "✅ Correct package found: explorerx-&version;.txz"
  fi
  
  # Verify MD5 of final package
  if [ -f "$EXPECTED_FILE" ]; then
    ACTUAL_MD5=$(md5sum "$EXPECTED_FILE" | cut -d' ' -f1)
    echo "Package MD5: $ACTUAL_MD5"
    echo "Expected MD5: &md5;"
    if [ "$ACTUAL_MD5" = "&md5;" ]; then
      echo "✅ MD5 verification passed"
    else
      echo "❌ MD5 mismatch - redownloading..."
      rm -f "$EXPECTED_FILE"
      wget -O "$EXPECTED_FILE" "&packageURL;"
    fi
  fi
else
  echo "❌ Plugin directory not found: $PLUGIN_DIR"
  exit 1
fi

echo ""
]]>
</INLINE>
</FILE>

<!-- Extract and install plugin -->
<FILE Run="/bin/bash">
<INLINE>
<![CDATA[
echo "================================================="
echo "Installing ExplorerX Plugin (SAFE VERSION)"
echo "================================================="

# Safe pre-installation check
echo "🔍 PRE-INSTALLATION CHECK:"
echo "Confirming plugin extraction location is safe..."

# NO global permission changes - this was the main problem!
# We will ONLY set permissions on our own files after extraction

# Extract plugin package safely to root and let it create the directory structure
cd /
echo ""
echo "📦 SAFE PLUGIN EXTRACTION:"
if ! tar -xf /boot/config/plugins/explorerx/explorerx-&version;.txz; then
  echo "❌ ERROR: Failed to extract plugin package"
  echo "This is a package extraction issue, not a system problem"
  exit 1
fi

# Verify extraction worked
if [ ! -d /usr/local/emhttp/plugins/explorerx ]; then
  echo "❌ ERROR: Plugin directory not found after extraction"
  echo "Available directories:"
  ls -la /usr/local/emhttp/plugins/ | head -5
  exit 1
fi

# SAFE: Only set permissions on OUR plugin directory
echo "🔧 SETTING SAFE PERMISSIONS (ExplorerX only):"
chown -R root:root /usr/local/emhttp/plugins/explorerx 2>&1
chmod -R 755 /usr/local/emhttp/plugins/explorerx 2>&1

# Set specific file permissions for security
find /usr/local/emhttp/plugins/explorerx -type f -name "*.php" -exec chmod 644 {} \; 2>/dev/null || true
find /usr/local/emhttp/plugins/explorerx -type f -name "*.page" -exec chmod 644 {} \; 2>/dev/null || true
find /usr/local/emhttp/plugins/explorerx -type f -name "*.js" -exec chmod 644 {} \; 2>/dev/null || true
find /usr/local/emhttp/plugins/explorerx -type f -name "*.css" -exec chmod 644 {} \; 2>/dev/null || true

# Safe file verification
echo "📋 SAFE FILE VERIFICATION:"
PLUGIN_DIR="/usr/local/emhttp/plugins/explorerx"

# Check for page file
if [ -f "$PLUGIN_DIR/explorerx.page" ]; then
  echo "✅ Page file found and readable"
else
  echo "❌ Page file missing"
  ls -la "$PLUGIN_DIR/" 2>/dev/null || echo "Directory not accessible"
  exit 1
fi

# Check for API file
if [ -f "$PLUGIN_DIR/include/api.php" ]; then
  echo "✅ API file found and readable"
else
  echo "❌ API file missing"
  ls -la "$PLUGIN_DIR/include/" 2>/dev/null || echo "Include directory missing"
  exit 1
fi

# Verify our plugin doesn't interfere with others
echo ""
echo "🔍 SAFETY VERIFICATION:"
echo "ExplorerX files installed:"
find /usr/local/emhttp/plugins/explorerx -type f | head -5

echo ""
echo "Other plugins remain untouched:"
ls -la /usr/local/emhttp/plugins/ | grep -v explorerx | head -3

# Final safety check - ensure nginx is running
echo ""
echo "🔄 SERVICE CHECK:"
if ! pgrep nginx > /dev/null; then
  echo "Starting nginx..."
  /etc/rc.d/rc.nginx start 2>&1
else
  echo "✅ Nginx is running"
fi

echo ""
echo "================================================="
echo "✅ ExplorerX Plugin Safely Installed!"
echo "================================================="
echo ""
echo "🎉 SAFE INSTALLATION COMPLETE:"
echo "• ExplorerX tab should now be available in UNRAID"
echo "• No other plugins were modified or touched"
echo "• All permissions are set correctly"
echo "• System stability maintained"
echo ""
echo "📧 For support: &support;"
echo "================================================="
]]>
</INLINE>
</FILE>

<!-- Uninstall procedure -->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
<![CDATA[
echo "================================================="
echo "Safely Uninstalling ExplorerX Plugin"
echo "================================================="

# SAFE uninstall - only remove our files
echo "🛡️ Safe removal of ExplorerX files only..."

# Remove only our plugin files
if [ -d /usr/local/emhttp/plugins/explorerx ]; then
  rm -rf /usr/local/emhttp/plugins/explorerx
  echo "✅ ExplorerX files removed"
else
  echo "ℹ️ ExplorerX files already removed"
fi

# Clean only our cache/logs
rm -rf /tmp/plugins/explorerx 2>/dev/null || true
rm -rf /var/log/plugins/explorerx 2>/dev/null || true

# Clean only our metadata files
rm -f /usr/local/emhttp/plugins/._explorerx 2>/dev/null || true

echo "================================================="
echo "✅ ExplorerX Plugin Safely Uninstalled"
echo "All other plugins remain untouched"
echo "================================================="
]]>
</INLINE>
</FILE>

</PLUGIN>
